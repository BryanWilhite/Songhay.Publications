### YamlMime:ManagedReference
items:
- uid: Songhay.Publications.Extensions.SegmentExtensions
  commentId: T:Songhay.Publications.Extensions.SegmentExtensions
  id: SegmentExtensions
  parent: Songhay.Publications.Extensions
  children:
  - Songhay.Publications.Extensions.SegmentExtensions.Clone(Songhay.Publications.Abstractions.ISegment)
  - Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment},System.Func{Songhay.Publications.Abstractions.ISegment,System.Boolean})
  - Songhay.Publications.Extensions.SegmentExtensions.HasDocuments(Songhay.Publications.Abstractions.ISegment)
  - Songhay.Publications.Extensions.SegmentExtensions.SetDefaults(Songhay.Publications.Abstractions.ISegment)
  - Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment)
  - Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment,System.Boolean)
  - Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment)
  - Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment,Songhay.Abstractions.IGroupable)
  - Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment})
  - Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry(Songhay.Publications.Abstractions.ISegment)
  - Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.ISegment)
  - Songhay.Publications.Extensions.SegmentExtensions.WithDefaults(Songhay.Publications.Abstractions.ISegment)
  - Songhay.Publications.Extensions.SegmentExtensions.WithEdit(Songhay.Publications.Abstractions.ISegment,System.Action{Songhay.Publications.Abstractions.ISegment})
  langs:
  - csharp
  - vb
  name: SegmentExtensions
  nameWithType: SegmentExtensions
  fullName: Songhay.Publications.Extensions.SegmentExtensions
  type: Class
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: SegmentExtensions
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 7
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Extensions of <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class SegmentExtensions
    content.vb: Public Module SegmentExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Publications.Extensions.SegmentExtensions.Clone(Songhay.Publications.Abstractions.ISegment)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.Clone(Songhay.Publications.Abstractions.ISegment)
  id: Clone(Songhay.Publications.Abstractions.ISegment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: Clone(ISegment?)
  nameWithType: SegmentExtensions.Clone(ISegment?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.Clone(Songhay.Publications.Abstractions.ISegment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: Clone
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 13
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Clones the instance of <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Segment? Clone(this ISegment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The document.
    return:
      type: Songhay.Publications.Models.Segment
    content.vb: Public Shared Function Clone(data As ISegment) As Segment
  overload: Songhay.Publications.Extensions.SegmentExtensions.Clone*
  nameWithType.vb: SegmentExtensions.Clone(ISegment)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.Clone(Songhay.Publications.Abstractions.ISegment)
  name.vb: Clone(ISegment)
- uid: Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment},System.Func{Songhay.Publications.Abstractions.ISegment,System.Boolean})
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment},System.Func{Songhay.Publications.Abstractions.ISegment,System.Boolean})
  id: GetSegmentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment},System.Func{Songhay.Publications.Abstractions.ISegment,System.Boolean})
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: GetSegmentByPredicate(IEnumerable<ISegment>?, Func<ISegment, bool>)
  nameWithType: SegmentExtensions.GetSegmentByPredicate(IEnumerable<ISegment>?, Func<ISegment, bool>)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate(System.Collections.Generic.IEnumerable<Songhay.Publications.Abstractions.ISegment>?, System.Func<Songhay.Publications.Abstractions.ISegment, bool>)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: GetSegmentByPredicate
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 21
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Returns and traces the first <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref>

    based on the specified predicate.
  example: []
  syntax:
    content: public static ISegment? GetSegmentByPredicate(this IEnumerable<ISegment>? data, Func<ISegment, bool> predicate)
    parameters:
    - id: data
      type: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment}
      description: The data.
    - id: predicate
      type: System.Func{Songhay.Publications.Abstractions.ISegment,System.Boolean}
      description: The predicate.
    return:
      type: Songhay.Publications.Abstractions.ISegment
    content.vb: Public Shared Function GetSegmentByPredicate(data As IEnumerable(Of ISegment), predicate As Func(Of ISegment, Boolean)) As ISegment
  overload: Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate*
  nameWithType.vb: SegmentExtensions.GetSegmentByPredicate(IEnumerable(Of ISegment), Func(Of ISegment, Boolean))
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate(System.Collections.Generic.IEnumerable(Of Songhay.Publications.Abstractions.ISegment), System.Func(Of Songhay.Publications.Abstractions.ISegment, Boolean))
  name.vb: GetSegmentByPredicate(IEnumerable(Of ISegment), Func(Of ISegment, Boolean))
- uid: Songhay.Publications.Extensions.SegmentExtensions.HasDocuments(Songhay.Publications.Abstractions.ISegment)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.HasDocuments(Songhay.Publications.Abstractions.ISegment)
  id: HasDocuments(Songhay.Publications.Abstractions.ISegment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: HasDocuments(ISegment?)
  nameWithType: SegmentExtensions.HasDocuments(ISegment?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.HasDocuments(Songhay.Publications.Abstractions.ISegment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: HasDocuments
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 35
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Returns <code>true</code> when the <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref>

    has any <xref href="Songhay.Publications.Models.Segment.Documents" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool HasDocuments(this ISegment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: ''
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasDocuments(data As ISegment) As Boolean
  overload: Songhay.Publications.Extensions.SegmentExtensions.HasDocuments*
  nameWithType.vb: SegmentExtensions.HasDocuments(ISegment)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.HasDocuments(Songhay.Publications.Abstractions.ISegment)
  name.vb: HasDocuments(ISegment)
- uid: Songhay.Publications.Extensions.SegmentExtensions.SetDefaults(Songhay.Publications.Abstractions.ISegment)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.SetDefaults(Songhay.Publications.Abstractions.ISegment)
  id: SetDefaults(Songhay.Publications.Abstractions.ISegment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: SetDefaults(ISegment?)
  nameWithType: SegmentExtensions.SetDefaults(ISegment?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.SetDefaults(Songhay.Publications.Abstractions.ISegment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: SetDefaults
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 48
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Sets the defaults.
  example: []
  syntax:
    content: public static void SetDefaults(this ISegment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The data.
    content.vb: Public Shared Sub SetDefaults(data As ISegment)
  overload: Songhay.Publications.Extensions.SegmentExtensions.SetDefaults*
  nameWithType.vb: SegmentExtensions.SetDefaults(ISegment)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.SetDefaults(Songhay.Publications.Abstractions.ISegment)
  name.vb: SetDefaults(ISegment)
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment)
  id: ToDisplayText(Songhay.Publications.Abstractions.ISegment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: ToDisplayText(ISegment?)
  nameWithType: SegmentExtensions.ToDisplayText(ISegment?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToDisplayText
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 60
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref> into human-readable display text.
  example: []
  syntax:
    content: public static string ToDisplayText(this ISegment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The data.
    return:
      type: System.String
    content.vb: Public Shared Function ToDisplayText(data As ISegment) As String
  overload: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText*
  nameWithType.vb: SegmentExtensions.ToDisplayText(ISegment)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment)
  name.vb: ToDisplayText(ISegment)
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment,System.Boolean)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment,System.Boolean)
  id: ToDisplayText(Songhay.Publications.Abstractions.ISegment,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: ToDisplayText(ISegment?, bool)
  nameWithType: SegmentExtensions.ToDisplayText(ISegment?, bool)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment?, bool)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToDisplayText
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 67
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref> into human-readable display text.
  example: []
  syntax:
    content: public static string ToDisplayText(this ISegment? data, bool showIdOnly)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The data.
    - id: showIdOnly
      type: System.Boolean
      description: when <code>true</code> then display identifiers only
    return:
      type: System.String
    content.vb: Public Shared Function ToDisplayText(data As ISegment, showIdOnly As Boolean) As String
  overload: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText*
  nameWithType.vb: SegmentExtensions.ToDisplayText(ISegment, Boolean)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.ISegment, Boolean)
  name.vb: ToDisplayText(ISegment, Boolean)
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment)
  id: ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: ToMenuDisplayItemModel(ISegment?)
  nameWithType: SegmentExtensions.ToMenuDisplayItemModel(ISegment?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMenuDisplayItemModel
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 110
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref> into a menu display item model.
  example: []
  syntax:
    content: public static MenuDisplayItemModel? ToMenuDisplayItemModel(this ISegment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The data.
    return:
      type: Songhay.Models.MenuDisplayItemModel
    content.vb: Public Shared Function ToMenuDisplayItemModel(data As ISegment) As MenuDisplayItemModel
  overload: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel*
  nameWithType.vb: SegmentExtensions.ToMenuDisplayItemModel(ISegment)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment)
  name.vb: ToMenuDisplayItemModel(ISegment)
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment,Songhay.Abstractions.IGroupable)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment,Songhay.Abstractions.IGroupable)
  id: ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment,Songhay.Abstractions.IGroupable)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: ToMenuDisplayItemModel(ISegment?, IGroupable?)
  nameWithType: SegmentExtensions.ToMenuDisplayItemModel(ISegment?, IGroupable?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment?, Songhay.Abstractions.IGroupable?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMenuDisplayItemModel
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 118
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref> into a menu display item model.
  example: []
  syntax:
    content: public static MenuDisplayItemModel? ToMenuDisplayItemModel(this ISegment? data, IGroupable? group)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The data.
    - id: group
      type: Songhay.Abstractions.IGroupable
      description: The group.
    return:
      type: Songhay.Models.MenuDisplayItemModel
    content.vb: Public Shared Function ToMenuDisplayItemModel(data As ISegment, group As IGroupable) As MenuDisplayItemModel
  overload: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel*
  nameWithType.vb: SegmentExtensions.ToMenuDisplayItemModel(ISegment, IGroupable)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.ISegment, Songhay.Abstractions.IGroupable)
  name.vb: ToMenuDisplayItemModel(ISegment, IGroupable)
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment})
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment})
  id: ToPublicationIndexEntries(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment})
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: ToPublicationIndexEntries(IEnumerable<ISegment>)
  nameWithType: SegmentExtensions.ToPublicationIndexEntries(IEnumerable<ISegment>)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries(System.Collections.Generic.IEnumerable<Songhay.Publications.Abstractions.ISegment>)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToPublicationIndexEntries
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 139
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> to <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IEnumerable<IIndexEntry> ToPublicationIndexEntries(this IEnumerable<ISegment> data)
    parameters:
    - id: data
      type: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment}
      description: The data.
    return:
      type: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IIndexEntry}
    content.vb: Public Shared Function ToPublicationIndexEntries(data As IEnumerable(Of ISegment)) As IEnumerable(Of IIndexEntry)
  overload: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries*
  nameWithType.vb: SegmentExtensions.ToPublicationIndexEntries(IEnumerable(Of ISegment))
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries(System.Collections.Generic.IEnumerable(Of Songhay.Publications.Abstractions.ISegment))
  name.vb: ToPublicationIndexEntries(IEnumerable(Of ISegment))
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry(Songhay.Publications.Abstractions.ISegment)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry(Songhay.Publications.Abstractions.ISegment)
  id: ToPublicationIndexEntry(Songhay.Publications.Abstractions.ISegment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: ToPublicationIndexEntry(ISegment?)
  nameWithType: SegmentExtensions.ToPublicationIndexEntry(ISegment?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry(Songhay.Publications.Abstractions.ISegment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToPublicationIndexEntry
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 150
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref> to <xref href="Songhay.Publications.Abstractions.IIndexEntry" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IIndexEntry ToPublicationIndexEntry(this ISegment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The data.
    return:
      type: Songhay.Publications.Abstractions.IIndexEntry
    content.vb: Public Shared Function ToPublicationIndexEntry(data As ISegment) As IIndexEntry
  overload: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry*
  nameWithType.vb: SegmentExtensions.ToPublicationIndexEntry(ISegment)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry(Songhay.Publications.Abstractions.ISegment)
  name.vb: ToPublicationIndexEntry(ISegment)
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.ISegment)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.ISegment)
  id: ToValidationResult(Songhay.Publications.Abstractions.ISegment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: ToValidationResult(ISegment?)
  nameWithType: SegmentExtensions.ToValidationResult(ISegment?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.ISegment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToValidationResult
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 170
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> data to <xref href="FluentValidation.Results.ValidationResult" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ValidationResult ToValidationResult(this ISegment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> data
    return:
      type: FluentValidation.Results.ValidationResult
    content.vb: Public Shared Function ToValidationResult(data As ISegment) As ValidationResult
  overload: Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult*
  nameWithType.vb: SegmentExtensions.ToValidationResult(ISegment)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.ISegment)
  name.vb: ToValidationResult(ISegment)
- uid: Songhay.Publications.Extensions.SegmentExtensions.WithDefaults(Songhay.Publications.Abstractions.ISegment)
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.WithDefaults(Songhay.Publications.Abstractions.ISegment)
  id: WithDefaults(Songhay.Publications.Abstractions.ISegment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: WithDefaults(ISegment?)
  nameWithType: SegmentExtensions.WithDefaults(ISegment?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.WithDefaults(Songhay.Publications.Abstractions.ISegment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: WithDefaults
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 185
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Returns <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref> with default values.
  example: []
  syntax:
    content: public static ISegment? WithDefaults(this ISegment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The data.
    return:
      type: Songhay.Publications.Abstractions.ISegment
    content.vb: Public Shared Function WithDefaults(data As ISegment) As ISegment
  overload: Songhay.Publications.Extensions.SegmentExtensions.WithDefaults*
  nameWithType.vb: SegmentExtensions.WithDefaults(ISegment)
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.WithDefaults(Songhay.Publications.Abstractions.ISegment)
  name.vb: WithDefaults(ISegment)
- uid: Songhay.Publications.Extensions.SegmentExtensions.WithEdit(Songhay.Publications.Abstractions.ISegment,System.Action{Songhay.Publications.Abstractions.ISegment})
  commentId: M:Songhay.Publications.Extensions.SegmentExtensions.WithEdit(Songhay.Publications.Abstractions.ISegment,System.Action{Songhay.Publications.Abstractions.ISegment})
  id: WithEdit(Songhay.Publications.Abstractions.ISegment,System.Action{Songhay.Publications.Abstractions.ISegment})
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.SegmentExtensions
  langs:
  - csharp
  - vb
  name: WithEdit(ISegment?, Action<ISegment>?)
  nameWithType: SegmentExtensions.WithEdit(ISegment?, Action<ISegment>?)
  fullName: Songhay.Publications.Extensions.SegmentExtensions.WithEdit(Songhay.Publications.Abstractions.ISegment?, System.Action<Songhay.Publications.Abstractions.ISegment>?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/ISegmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: WithEdit
    path: ../Songhay.Publications/Extensions/ISegmentExtensions.cs
    startLine: 198
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Returns <xref href="Songhay.Publications.Abstractions.ISegment" data-throw-if-not-resolved="false"></xref>

    after the specified edit <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ISegment WithEdit(this ISegment? data, Action<ISegment>? editAction)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.ISegment
      description: The data.
    - id: editAction
      type: System.Action{Songhay.Publications.Abstractions.ISegment}
      description: The edit action.
    return:
      type: Songhay.Publications.Abstractions.ISegment
    content.vb: Public Shared Function WithEdit(data As ISegment, editAction As Action(Of ISegment)) As ISegment
  overload: Songhay.Publications.Extensions.SegmentExtensions.WithEdit*
  nameWithType.vb: SegmentExtensions.WithEdit(ISegment, Action(Of ISegment))
  fullName.vb: Songhay.Publications.Extensions.SegmentExtensions.WithEdit(Songhay.Publications.Abstractions.ISegment, System.Action(Of Songhay.Publications.Abstractions.ISegment))
  name.vb: WithEdit(ISegment, Action(Of ISegment))
references:
- uid: Songhay.Publications.Abstractions.ISegment
  commentId: T:Songhay.Publications.Abstractions.ISegment
  parent: Songhay.Publications.Abstractions
  href: Songhay.Publications.Abstractions.ISegment.html
  name: ISegment
  nameWithType: ISegment
  fullName: Songhay.Publications.Abstractions.ISegment
- uid: Songhay.Publications.Extensions
  commentId: N:Songhay.Publications.Extensions
  href: Songhay.html
  name: Songhay.Publications.Extensions
  nameWithType: Songhay.Publications.Extensions
  fullName: Songhay.Publications.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Extensions
    name: Extensions
    href: Songhay.Publications.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Extensions
    name: Extensions
    href: Songhay.Publications.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Songhay.Publications.Abstractions
  commentId: N:Songhay.Publications.Abstractions
  href: Songhay.html
  name: Songhay.Publications.Abstractions
  nameWithType: Songhay.Publications.Abstractions
  fullName: Songhay.Publications.Abstractions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Abstractions
    name: Abstractions
    href: Songhay.Publications.Abstractions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Abstractions
    name: Abstractions
    href: Songhay.Publications.Abstractions.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Songhay.Publications.Extensions.SegmentExtensions.Clone*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.Clone
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_Clone_Songhay_Publications_Abstractions_ISegment_
  name: Clone
  nameWithType: SegmentExtensions.Clone
  fullName: Songhay.Publications.Extensions.SegmentExtensions.Clone
- uid: Songhay.Publications.Models.Segment
  commentId: T:Songhay.Publications.Models.Segment
  parent: Songhay.Publications.Models
  href: Songhay.Publications.Models.Segment.html
  name: Segment
  nameWithType: Segment
  fullName: Songhay.Publications.Models.Segment
- uid: Songhay.Publications.Models
  commentId: N:Songhay.Publications.Models
  href: Songhay.html
  name: Songhay.Publications.Models
  nameWithType: Songhay.Publications.Models
  fullName: Songhay.Publications.Models
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Models
    name: Models
    href: Songhay.Publications.Models.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Models
    name: Models
    href: Songhay.Publications.Models.html
- uid: Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_GetSegmentByPredicate_System_Collections_Generic_IEnumerable_Songhay_Publications_Abstractions_ISegment__System_Func_Songhay_Publications_Abstractions_ISegment_System_Boolean__
  name: GetSegmentByPredicate
  nameWithType: SegmentExtensions.GetSegmentByPredicate
  fullName: Songhay.Publications.Extensions.SegmentExtensions.GetSegmentByPredicate
- uid: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment}
  commentId: T:System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.ISegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ISegment>
  nameWithType: IEnumerable<ISegment>
  fullName: System.Collections.Generic.IEnumerable<Songhay.Publications.Abstractions.ISegment>
  nameWithType.vb: IEnumerable(Of ISegment)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Songhay.Publications.Abstractions.ISegment)
  name.vb: IEnumerable(Of ISegment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Songhay.Publications.Abstractions.ISegment
    name: ISegment
    href: Songhay.Publications.Abstractions.ISegment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.ISegment
    name: ISegment
    href: Songhay.Publications.Abstractions.ISegment.html
  - name: )
- uid: System.Func{Songhay.Publications.Abstractions.ISegment,System.Boolean}
  commentId: T:System.Func{Songhay.Publications.Abstractions.ISegment,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ISegment, bool>
  nameWithType: Func<ISegment, bool>
  fullName: System.Func<Songhay.Publications.Abstractions.ISegment, bool>
  nameWithType.vb: Func(Of ISegment, Boolean)
  fullName.vb: System.Func(Of Songhay.Publications.Abstractions.ISegment, Boolean)
  name.vb: Func(Of ISegment, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Songhay.Publications.Abstractions.ISegment
    name: ISegment
    href: Songhay.Publications.Abstractions.ISegment.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.ISegment
    name: ISegment
    href: Songhay.Publications.Abstractions.ISegment.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Songhay.Publications.Models.Segment.Documents
  commentId: P:Songhay.Publications.Models.Segment.Documents
  href: Songhay.Publications.Models.Segment.html#Songhay_Publications_Models_Segment_Documents
  name: Documents
  nameWithType: Segment.Documents
  fullName: Songhay.Publications.Models.Segment.Documents
- uid: Songhay.Publications.Extensions.SegmentExtensions.HasDocuments*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.HasDocuments
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_HasDocuments_Songhay_Publications_Abstractions_ISegment_
  name: HasDocuments
  nameWithType: SegmentExtensions.HasDocuments
  fullName: Songhay.Publications.Extensions.SegmentExtensions.HasDocuments
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Songhay.Publications.Extensions.SegmentExtensions.SetDefaults*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.SetDefaults
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_SetDefaults_Songhay_Publications_Abstractions_ISegment_
  name: SetDefaults
  nameWithType: SegmentExtensions.SetDefaults
  fullName: Songhay.Publications.Extensions.SegmentExtensions.SetDefaults
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_ToDisplayText_Songhay_Publications_Abstractions_ISegment_
  name: ToDisplayText
  nameWithType: SegmentExtensions.ToDisplayText
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToDisplayText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_ToMenuDisplayItemModel_Songhay_Publications_Abstractions_ISegment_
  name: ToMenuDisplayItemModel
  nameWithType: SegmentExtensions.ToMenuDisplayItemModel
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToMenuDisplayItemModel
- uid: Songhay.Models.MenuDisplayItemModel
  commentId: T:Songhay.Models.MenuDisplayItemModel
  parent: Songhay.Models
  isExternal: true
  name: MenuDisplayItemModel
  nameWithType: MenuDisplayItemModel
  fullName: Songhay.Models.MenuDisplayItemModel
- uid: Songhay.Models
  commentId: N:Songhay.Models
  isExternal: true
  name: Songhay.Models
  nameWithType: Songhay.Models
  fullName: Songhay.Models
  spec.csharp:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Models
    name: Models
    isExternal: true
  spec.vb:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Models
    name: Models
    isExternal: true
- uid: Songhay.Abstractions.IGroupable
  commentId: T:Songhay.Abstractions.IGroupable
  parent: Songhay.Abstractions
  isExternal: true
  name: IGroupable
  nameWithType: IGroupable
  fullName: Songhay.Abstractions.IGroupable
- uid: Songhay.Abstractions
  commentId: N:Songhay.Abstractions
  isExternal: true
  name: Songhay.Abstractions
  nameWithType: Songhay.Abstractions
  fullName: Songhay.Abstractions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Abstractions
    name: Abstractions
    isExternal: true
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_ToPublicationIndexEntries_System_Collections_Generic_IEnumerable_Songhay_Publications_Abstractions_ISegment__
  name: ToPublicationIndexEntries
  nameWithType: SegmentExtensions.ToPublicationIndexEntries
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntries
- uid: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IIndexEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IIndexEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IIndexEntry>
  nameWithType: IEnumerable<IIndexEntry>
  fullName: System.Collections.Generic.IEnumerable<Songhay.Publications.Abstractions.IIndexEntry>
  nameWithType.vb: IEnumerable(Of IIndexEntry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Songhay.Publications.Abstractions.IIndexEntry)
  name.vb: IEnumerable(Of IIndexEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Songhay.Publications.Abstractions.IIndexEntry
    name: IIndexEntry
    href: Songhay.Publications.Abstractions.IIndexEntry.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.IIndexEntry
    name: IIndexEntry
    href: Songhay.Publications.Abstractions.IIndexEntry.html
  - name: )
- uid: Songhay.Publications.Abstractions.IIndexEntry
  commentId: T:Songhay.Publications.Abstractions.IIndexEntry
  parent: Songhay.Publications.Abstractions
  href: Songhay.Publications.Abstractions.IIndexEntry.html
  name: IIndexEntry
  nameWithType: IIndexEntry
  fullName: Songhay.Publications.Abstractions.IIndexEntry
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_ToPublicationIndexEntry_Songhay_Publications_Abstractions_ISegment_
  name: ToPublicationIndexEntry
  nameWithType: SegmentExtensions.ToPublicationIndexEntry
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToPublicationIndexEntry
- uid: Songhay.Publications.Abstractions.IDocument
  commentId: T:Songhay.Publications.Abstractions.IDocument
  parent: Songhay.Publications.Abstractions
  href: Songhay.Publications.Abstractions.IDocument.html
  name: IDocument
  nameWithType: IDocument
  fullName: Songhay.Publications.Abstractions.IDocument
- uid: FluentValidation.Results.ValidationResult
  commentId: T:FluentValidation.Results.ValidationResult
  parent: FluentValidation.Results
  isExternal: true
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: FluentValidation.Results.ValidationResult
- uid: Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_ToValidationResult_Songhay_Publications_Abstractions_ISegment_
  name: ToValidationResult
  nameWithType: SegmentExtensions.ToValidationResult
  fullName: Songhay.Publications.Extensions.SegmentExtensions.ToValidationResult
- uid: FluentValidation.Results
  commentId: N:FluentValidation.Results
  isExternal: true
  name: FluentValidation.Results
  nameWithType: FluentValidation.Results
  fullName: FluentValidation.Results
  spec.csharp:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
  spec.vb:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
- uid: Songhay.Publications.Extensions.SegmentExtensions.WithDefaults*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.WithDefaults
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_WithDefaults_Songhay_Publications_Abstractions_ISegment_
  name: WithDefaults
  nameWithType: SegmentExtensions.WithDefaults
  fullName: Songhay.Publications.Extensions.SegmentExtensions.WithDefaults
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Publications.Extensions.SegmentExtensions.WithEdit*
  commentId: Overload:Songhay.Publications.Extensions.SegmentExtensions.WithEdit
  href: Songhay.Publications.Extensions.SegmentExtensions.html#Songhay_Publications_Extensions_SegmentExtensions_WithEdit_Songhay_Publications_Abstractions_ISegment_System_Action_Songhay_Publications_Abstractions_ISegment__
  name: WithEdit
  nameWithType: SegmentExtensions.WithEdit
  fullName: Songhay.Publications.Extensions.SegmentExtensions.WithEdit
- uid: System.Action{Songhay.Publications.Abstractions.ISegment}
  commentId: T:System.Action{Songhay.Publications.Abstractions.ISegment}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ISegment>
  nameWithType: Action<ISegment>
  fullName: System.Action<Songhay.Publications.Abstractions.ISegment>
  nameWithType.vb: Action(Of ISegment)
  fullName.vb: System.Action(Of Songhay.Publications.Abstractions.ISegment)
  name.vb: Action(Of ISegment)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Songhay.Publications.Abstractions.ISegment
    name: ISegment
    href: Songhay.Publications.Abstractions.ISegment.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.ISegment
    name: ISegment
    href: Songhay.Publications.Abstractions.ISegment.html
  - name: )
