### YamlMime:ManagedReference
items:
- uid: Songhay.Publications.Extensions.FragmentExtensions
  commentId: T:Songhay.Publications.Extensions.FragmentExtensions
  id: FragmentExtensions
  parent: Songhay.Publications.Extensions
  children:
  - Songhay.Publications.Extensions.FragmentExtensions.Clone(Songhay.Publications.Abstractions.IFragment)
  - Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IFragment},System.Func{Songhay.Publications.Abstractions.IFragment,System.Boolean})
  - Songhay.Publications.Extensions.FragmentExtensions.SetDefaults(Songhay.Publications.Abstractions.IFragment)
  - Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment)
  - Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment,System.Boolean)
  - Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment)
  - Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,Songhay.Abstractions.IGroupable)
  - Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,Songhay.Abstractions.IGroupable,System.Boolean)
  - Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,System.Boolean)
  - Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IFragment)
  - Songhay.Publications.Extensions.FragmentExtensions.WithDefaults(Songhay.Publications.Abstractions.IFragment)
  - Songhay.Publications.Extensions.FragmentExtensions.WithEdit(Songhay.Publications.Abstractions.IFragment,System.Action{Songhay.Publications.Abstractions.IFragment})
  langs:
  - csharp
  - vb
  name: FragmentExtensions
  nameWithType: FragmentExtensions
  fullName: Songhay.Publications.Extensions.FragmentExtensions
  type: Class
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: FragmentExtensions
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 7
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Extensions of <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class FragmentExtensions
    content.vb: Public Module FragmentExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Publications.Extensions.FragmentExtensions.Clone(Songhay.Publications.Abstractions.IFragment)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.Clone(Songhay.Publications.Abstractions.IFragment)
  id: Clone(Songhay.Publications.Abstractions.IFragment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: Clone(IFragment?)
  nameWithType: FragmentExtensions.Clone(IFragment?)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.Clone(Songhay.Publications.Abstractions.IFragment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: Clone
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 13
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Clones the instance of <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Fragment? Clone(this IFragment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The document.
    return:
      type: Songhay.Publications.Models.Fragment
    content.vb: Public Shared Function Clone(data As IFragment) As Fragment
  overload: Songhay.Publications.Extensions.FragmentExtensions.Clone*
  nameWithType.vb: FragmentExtensions.Clone(IFragment)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.Clone(Songhay.Publications.Abstractions.IFragment)
  name.vb: Clone(IFragment)
- uid: Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IFragment},System.Func{Songhay.Publications.Abstractions.IFragment,System.Boolean})
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IFragment},System.Func{Songhay.Publications.Abstractions.IFragment,System.Boolean})
  id: GetFragmentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IFragment},System.Func{Songhay.Publications.Abstractions.IFragment,System.Boolean})
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: GetFragmentByPredicate(IEnumerable<IFragment>?, Func<IFragment, bool>)
  nameWithType: FragmentExtensions.GetFragmentByPredicate(IEnumerable<IFragment>?, Func<IFragment, bool>)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate(System.Collections.Generic.IEnumerable<Songhay.Publications.Abstractions.IFragment>?, System.Func<Songhay.Publications.Abstractions.IFragment, bool>)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: GetFragmentByPredicate
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 21
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Returns and traces the first <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref>

    based on the specified predicate.
  example: []
  syntax:
    content: public static IFragment? GetFragmentByPredicate(this IEnumerable<IFragment>? data, Func<IFragment, bool> predicate)
    parameters:
    - id: data
      type: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IFragment}
      description: The data.
    - id: predicate
      type: System.Func{Songhay.Publications.Abstractions.IFragment,System.Boolean}
      description: The predicate.
    return:
      type: Songhay.Publications.Abstractions.IFragment
    content.vb: Public Shared Function GetFragmentByPredicate(data As IEnumerable(Of IFragment), predicate As Func(Of IFragment, Boolean)) As IFragment
  overload: Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate*
  nameWithType.vb: FragmentExtensions.GetFragmentByPredicate(IEnumerable(Of IFragment), Func(Of IFragment, Boolean))
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate(System.Collections.Generic.IEnumerable(Of Songhay.Publications.Abstractions.IFragment), System.Func(Of Songhay.Publications.Abstractions.IFragment, Boolean))
  name.vb: GetFragmentByPredicate(IEnumerable(Of IFragment), Func(Of IFragment, Boolean))
- uid: Songhay.Publications.Extensions.FragmentExtensions.SetDefaults(Songhay.Publications.Abstractions.IFragment)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.SetDefaults(Songhay.Publications.Abstractions.IFragment)
  id: SetDefaults(Songhay.Publications.Abstractions.IFragment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: SetDefaults(IFragment?)
  nameWithType: FragmentExtensions.SetDefaults(IFragment?)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.SetDefaults(Songhay.Publications.Abstractions.IFragment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: SetDefaults
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 34
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Sets the defaults.
  example: []
  syntax:
    content: public static void SetDefaults(this IFragment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The fragment.
    content.vb: Public Shared Sub SetDefaults(data As IFragment)
  overload: Songhay.Publications.Extensions.FragmentExtensions.SetDefaults*
  nameWithType.vb: FragmentExtensions.SetDefaults(IFragment)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.SetDefaults(Songhay.Publications.Abstractions.IFragment)
  name.vb: SetDefaults(IFragment)
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment)
  id: ToDisplayText(Songhay.Publications.Abstractions.IFragment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: ToDisplayText(IFragment?)
  nameWithType: FragmentExtensions.ToDisplayText(IFragment?)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToDisplayText
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 47
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> into human-readable display text.
  example: []
  syntax:
    content: public static string ToDisplayText(this IFragment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The data.
    return:
      type: System.String
    content.vb: Public Shared Function ToDisplayText(data As IFragment) As String
  overload: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText*
  nameWithType.vb: FragmentExtensions.ToDisplayText(IFragment)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment)
  name.vb: ToDisplayText(IFragment)
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment,System.Boolean)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment,System.Boolean)
  id: ToDisplayText(Songhay.Publications.Abstractions.IFragment,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: ToDisplayText(IFragment?, bool)
  nameWithType: FragmentExtensions.ToDisplayText(IFragment?, bool)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment?, bool)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToDisplayText
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 54
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> into a display text.
  example: []
  syntax:
    content: public static string ToDisplayText(this IFragment? data, bool showIdOnly)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The data.
    - id: showIdOnly
      type: System.Boolean
      description: when <code>true</code> then display identifiers only
    return:
      type: System.String
    content.vb: Public Shared Function ToDisplayText(data As IFragment, showIdOnly As Boolean) As String
  overload: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText*
  nameWithType.vb: FragmentExtensions.ToDisplayText(IFragment, Boolean)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IFragment, Boolean)
  name.vb: ToDisplayText(IFragment, Boolean)
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment)
  id: ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: ToMenuDisplayItemModel(IFragment?)
  nameWithType: FragmentExtensions.ToMenuDisplayItemModel(IFragment?)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMenuDisplayItemModel
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 114
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> into a menu display item model.
  example: []
  syntax:
    content: public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IFragment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The fragment.
    return:
      type: Songhay.Models.MenuDisplayItemModel
    content.vb: Public Shared Function ToMenuDisplayItemModel(data As IFragment) As MenuDisplayItemModel
  overload: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel*
  nameWithType.vb: FragmentExtensions.ToMenuDisplayItemModel(IFragment)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment)
  name.vb: ToMenuDisplayItemModel(IFragment)
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,System.Boolean)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,System.Boolean)
  id: ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: ToMenuDisplayItemModel(IFragment?, bool)
  nameWithType: FragmentExtensions.ToMenuDisplayItemModel(IFragment?, bool)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment?, bool)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMenuDisplayItemModel
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 123
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> into a menu display item model.
  example: []
  syntax:
    content: public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IFragment? data, bool copyFragmentContent)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The data.
    - id: copyFragmentContent
      type: System.Boolean
      description: if set to <code>true</code> include <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> content.
    return:
      type: Songhay.Models.MenuDisplayItemModel
      description: ''
    content.vb: Public Shared Function ToMenuDisplayItemModel(data As IFragment, copyFragmentContent As Boolean) As MenuDisplayItemModel
  overload: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel*
  nameWithType.vb: FragmentExtensions.ToMenuDisplayItemModel(IFragment, Boolean)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment, Boolean)
  name.vb: ToMenuDisplayItemModel(IFragment, Boolean)
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,Songhay.Abstractions.IGroupable)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,Songhay.Abstractions.IGroupable)
  id: ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,Songhay.Abstractions.IGroupable)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: ToMenuDisplayItemModel(IFragment?, IGroupable?)
  nameWithType: FragmentExtensions.ToMenuDisplayItemModel(IFragment?, IGroupable?)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment?, Songhay.Abstractions.IGroupable?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMenuDisplayItemModel
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 131
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> into a menu display item model.
  example: []
  syntax:
    content: public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IFragment? data, IGroupable? group)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The fragment.
    - id: group
      type: Songhay.Abstractions.IGroupable
      description: The group.
    return:
      type: Songhay.Models.MenuDisplayItemModel
    content.vb: Public Shared Function ToMenuDisplayItemModel(data As IFragment, group As IGroupable) As MenuDisplayItemModel
  overload: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel*
  nameWithType.vb: FragmentExtensions.ToMenuDisplayItemModel(IFragment, IGroupable)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment, Songhay.Abstractions.IGroupable)
  name.vb: ToMenuDisplayItemModel(IFragment, IGroupable)
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,Songhay.Abstractions.IGroupable,System.Boolean)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,Songhay.Abstractions.IGroupable,System.Boolean)
  id: ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment,Songhay.Abstractions.IGroupable,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: ToMenuDisplayItemModel(IFragment?, IGroupable?, bool)
  nameWithType: FragmentExtensions.ToMenuDisplayItemModel(IFragment?, IGroupable?, bool)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment?, Songhay.Abstractions.IGroupable?, bool)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMenuDisplayItemModel
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 140
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> into a menu display item model.
  example: []
  syntax:
    content: public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IFragment? data, IGroupable? group, bool copyFragmentContent)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The document.
    - id: group
      type: Songhay.Abstractions.IGroupable
      description: The group.
    - id: copyFragmentContent
      type: System.Boolean
      description: if set to <code>true</code> include <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> content.
    return:
      type: Songhay.Models.MenuDisplayItemModel
    content.vb: Public Shared Function ToMenuDisplayItemModel(data As IFragment, group As IGroupable, copyFragmentContent As Boolean) As MenuDisplayItemModel
  overload: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel*
  nameWithType.vb: FragmentExtensions.ToMenuDisplayItemModel(IFragment, IGroupable, Boolean)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IFragment, Songhay.Abstractions.IGroupable, Boolean)
  name.vb: ToMenuDisplayItemModel(IFragment, IGroupable, Boolean)
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IFragment)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IFragment)
  id: ToValidationResult(Songhay.Publications.Abstractions.IFragment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: ToValidationResult(IFragment?)
  nameWithType: FragmentExtensions.ToValidationResult(IFragment?)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IFragment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToValidationResult
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 164
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> data to <xref href="FluentValidation.Results.ValidationResult" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ValidationResult ToValidationResult(this IFragment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> data
    return:
      type: FluentValidation.Results.ValidationResult
    content.vb: Public Shared Function ToValidationResult(data As IFragment) As ValidationResult
  overload: Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult*
  nameWithType.vb: FragmentExtensions.ToValidationResult(IFragment)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IFragment)
  name.vb: ToValidationResult(IFragment)
- uid: Songhay.Publications.Extensions.FragmentExtensions.WithDefaults(Songhay.Publications.Abstractions.IFragment)
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.WithDefaults(Songhay.Publications.Abstractions.IFragment)
  id: WithDefaults(Songhay.Publications.Abstractions.IFragment)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: WithDefaults(IFragment?)
  nameWithType: FragmentExtensions.WithDefaults(IFragment?)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.WithDefaults(Songhay.Publications.Abstractions.IFragment?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: WithDefaults
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 179
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Returns <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref> with default values.
  example: []
  syntax:
    content: public static IFragment? WithDefaults(this IFragment? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The data.
    return:
      type: Songhay.Publications.Abstractions.IFragment
    content.vb: Public Shared Function WithDefaults(data As IFragment) As IFragment
  overload: Songhay.Publications.Extensions.FragmentExtensions.WithDefaults*
  nameWithType.vb: FragmentExtensions.WithDefaults(IFragment)
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.WithDefaults(Songhay.Publications.Abstractions.IFragment)
  name.vb: WithDefaults(IFragment)
- uid: Songhay.Publications.Extensions.FragmentExtensions.WithEdit(Songhay.Publications.Abstractions.IFragment,System.Action{Songhay.Publications.Abstractions.IFragment})
  commentId: M:Songhay.Publications.Extensions.FragmentExtensions.WithEdit(Songhay.Publications.Abstractions.IFragment,System.Action{Songhay.Publications.Abstractions.IFragment})
  id: WithEdit(Songhay.Publications.Abstractions.IFragment,System.Action{Songhay.Publications.Abstractions.IFragment})
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.FragmentExtensions
  langs:
  - csharp
  - vb
  name: WithEdit(IFragment?, Action<IFragment>?)
  nameWithType: FragmentExtensions.WithEdit(IFragment?, Action<IFragment>?)
  fullName: Songhay.Publications.Extensions.FragmentExtensions.WithEdit(Songhay.Publications.Abstractions.IFragment?, System.Action<Songhay.Publications.Abstractions.IFragment>?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IFragmentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: WithEdit
    path: ../Songhay.Publications/Extensions/IFragmentExtensions.cs
    startLine: 192
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Returns <xref href="Songhay.Publications.Abstractions.IFragment" data-throw-if-not-resolved="false"></xref>

    after the specified edit <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IFragment WithEdit(this IFragment? data, Action<IFragment>? editAction)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IFragment
      description: The data.
    - id: editAction
      type: System.Action{Songhay.Publications.Abstractions.IFragment}
      description: The edit action.
    return:
      type: Songhay.Publications.Abstractions.IFragment
    content.vb: Public Shared Function WithEdit(data As IFragment, editAction As Action(Of IFragment)) As IFragment
  overload: Songhay.Publications.Extensions.FragmentExtensions.WithEdit*
  nameWithType.vb: FragmentExtensions.WithEdit(IFragment, Action(Of IFragment))
  fullName.vb: Songhay.Publications.Extensions.FragmentExtensions.WithEdit(Songhay.Publications.Abstractions.IFragment, System.Action(Of Songhay.Publications.Abstractions.IFragment))
  name.vb: WithEdit(IFragment, Action(Of IFragment))
references:
- uid: Songhay.Publications.Abstractions.IFragment
  commentId: T:Songhay.Publications.Abstractions.IFragment
  parent: Songhay.Publications.Abstractions
  href: Songhay.Publications.Abstractions.IFragment.html
  name: IFragment
  nameWithType: IFragment
  fullName: Songhay.Publications.Abstractions.IFragment
- uid: Songhay.Publications.Extensions
  commentId: N:Songhay.Publications.Extensions
  href: Songhay.html
  name: Songhay.Publications.Extensions
  nameWithType: Songhay.Publications.Extensions
  fullName: Songhay.Publications.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Extensions
    name: Extensions
    href: Songhay.Publications.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Extensions
    name: Extensions
    href: Songhay.Publications.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Songhay.Publications.Abstractions
  commentId: N:Songhay.Publications.Abstractions
  href: Songhay.html
  name: Songhay.Publications.Abstractions
  nameWithType: Songhay.Publications.Abstractions
  fullName: Songhay.Publications.Abstractions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Abstractions
    name: Abstractions
    href: Songhay.Publications.Abstractions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Abstractions
    name: Abstractions
    href: Songhay.Publications.Abstractions.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Songhay.Publications.Extensions.FragmentExtensions.Clone*
  commentId: Overload:Songhay.Publications.Extensions.FragmentExtensions.Clone
  href: Songhay.Publications.Extensions.FragmentExtensions.html#Songhay_Publications_Extensions_FragmentExtensions_Clone_Songhay_Publications_Abstractions_IFragment_
  name: Clone
  nameWithType: FragmentExtensions.Clone
  fullName: Songhay.Publications.Extensions.FragmentExtensions.Clone
- uid: Songhay.Publications.Models.Fragment
  commentId: T:Songhay.Publications.Models.Fragment
  parent: Songhay.Publications.Models
  href: Songhay.Publications.Models.Fragment.html
  name: Fragment
  nameWithType: Fragment
  fullName: Songhay.Publications.Models.Fragment
- uid: Songhay.Publications.Models
  commentId: N:Songhay.Publications.Models
  href: Songhay.html
  name: Songhay.Publications.Models
  nameWithType: Songhay.Publications.Models
  fullName: Songhay.Publications.Models
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Models
    name: Models
    href: Songhay.Publications.Models.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Models
    name: Models
    href: Songhay.Publications.Models.html
- uid: Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate*
  commentId: Overload:Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate
  href: Songhay.Publications.Extensions.FragmentExtensions.html#Songhay_Publications_Extensions_FragmentExtensions_GetFragmentByPredicate_System_Collections_Generic_IEnumerable_Songhay_Publications_Abstractions_IFragment__System_Func_Songhay_Publications_Abstractions_IFragment_System_Boolean__
  name: GetFragmentByPredicate
  nameWithType: FragmentExtensions.GetFragmentByPredicate
  fullName: Songhay.Publications.Extensions.FragmentExtensions.GetFragmentByPredicate
- uid: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IFragment}
  commentId: T:System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IFragment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IFragment>
  nameWithType: IEnumerable<IFragment>
  fullName: System.Collections.Generic.IEnumerable<Songhay.Publications.Abstractions.IFragment>
  nameWithType.vb: IEnumerable(Of IFragment)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Songhay.Publications.Abstractions.IFragment)
  name.vb: IEnumerable(Of IFragment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Songhay.Publications.Abstractions.IFragment
    name: IFragment
    href: Songhay.Publications.Abstractions.IFragment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.IFragment
    name: IFragment
    href: Songhay.Publications.Abstractions.IFragment.html
  - name: )
- uid: System.Func{Songhay.Publications.Abstractions.IFragment,System.Boolean}
  commentId: T:System.Func{Songhay.Publications.Abstractions.IFragment,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IFragment, bool>
  nameWithType: Func<IFragment, bool>
  fullName: System.Func<Songhay.Publications.Abstractions.IFragment, bool>
  nameWithType.vb: Func(Of IFragment, Boolean)
  fullName.vb: System.Func(Of Songhay.Publications.Abstractions.IFragment, Boolean)
  name.vb: Func(Of IFragment, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Songhay.Publications.Abstractions.IFragment
    name: IFragment
    href: Songhay.Publications.Abstractions.IFragment.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.IFragment
    name: IFragment
    href: Songhay.Publications.Abstractions.IFragment.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Songhay.Publications.Extensions.FragmentExtensions.SetDefaults*
  commentId: Overload:Songhay.Publications.Extensions.FragmentExtensions.SetDefaults
  href: Songhay.Publications.Extensions.FragmentExtensions.html#Songhay_Publications_Extensions_FragmentExtensions_SetDefaults_Songhay_Publications_Abstractions_IFragment_
  name: SetDefaults
  nameWithType: FragmentExtensions.SetDefaults
  fullName: Songhay.Publications.Extensions.FragmentExtensions.SetDefaults
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText*
  commentId: Overload:Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText
  href: Songhay.Publications.Extensions.FragmentExtensions.html#Songhay_Publications_Extensions_FragmentExtensions_ToDisplayText_Songhay_Publications_Abstractions_IFragment_
  name: ToDisplayText
  nameWithType: FragmentExtensions.ToDisplayText
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToDisplayText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel*
  commentId: Overload:Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel
  href: Songhay.Publications.Extensions.FragmentExtensions.html#Songhay_Publications_Extensions_FragmentExtensions_ToMenuDisplayItemModel_Songhay_Publications_Abstractions_IFragment_
  name: ToMenuDisplayItemModel
  nameWithType: FragmentExtensions.ToMenuDisplayItemModel
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToMenuDisplayItemModel
- uid: Songhay.Models.MenuDisplayItemModel
  commentId: T:Songhay.Models.MenuDisplayItemModel
  parent: Songhay.Models
  isExternal: true
  name: MenuDisplayItemModel
  nameWithType: MenuDisplayItemModel
  fullName: Songhay.Models.MenuDisplayItemModel
- uid: Songhay.Models
  commentId: N:Songhay.Models
  isExternal: true
  name: Songhay.Models
  nameWithType: Songhay.Models
  fullName: Songhay.Models
  spec.csharp:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Models
    name: Models
    isExternal: true
  spec.vb:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Models
    name: Models
    isExternal: true
- uid: Songhay.Abstractions.IGroupable
  commentId: T:Songhay.Abstractions.IGroupable
  parent: Songhay.Abstractions
  isExternal: true
  name: IGroupable
  nameWithType: IGroupable
  fullName: Songhay.Abstractions.IGroupable
- uid: Songhay.Abstractions
  commentId: N:Songhay.Abstractions
  isExternal: true
  name: Songhay.Abstractions
  nameWithType: Songhay.Abstractions
  fullName: Songhay.Abstractions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Abstractions
    name: Abstractions
    isExternal: true
- uid: Songhay.Publications.Abstractions.IDocument
  commentId: T:Songhay.Publications.Abstractions.IDocument
  parent: Songhay.Publications.Abstractions
  href: Songhay.Publications.Abstractions.IDocument.html
  name: IDocument
  nameWithType: IDocument
  fullName: Songhay.Publications.Abstractions.IDocument
- uid: FluentValidation.Results.ValidationResult
  commentId: T:FluentValidation.Results.ValidationResult
  parent: FluentValidation.Results
  isExternal: true
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: FluentValidation.Results.ValidationResult
- uid: Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult*
  commentId: Overload:Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult
  href: Songhay.Publications.Extensions.FragmentExtensions.html#Songhay_Publications_Extensions_FragmentExtensions_ToValidationResult_Songhay_Publications_Abstractions_IFragment_
  name: ToValidationResult
  nameWithType: FragmentExtensions.ToValidationResult
  fullName: Songhay.Publications.Extensions.FragmentExtensions.ToValidationResult
- uid: FluentValidation.Results
  commentId: N:FluentValidation.Results
  isExternal: true
  name: FluentValidation.Results
  nameWithType: FluentValidation.Results
  fullName: FluentValidation.Results
  spec.csharp:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
  spec.vb:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
- uid: Songhay.Publications.Extensions.FragmentExtensions.WithDefaults*
  commentId: Overload:Songhay.Publications.Extensions.FragmentExtensions.WithDefaults
  href: Songhay.Publications.Extensions.FragmentExtensions.html#Songhay_Publications_Extensions_FragmentExtensions_WithDefaults_Songhay_Publications_Abstractions_IFragment_
  name: WithDefaults
  nameWithType: FragmentExtensions.WithDefaults
  fullName: Songhay.Publications.Extensions.FragmentExtensions.WithDefaults
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Publications.Extensions.FragmentExtensions.WithEdit*
  commentId: Overload:Songhay.Publications.Extensions.FragmentExtensions.WithEdit
  href: Songhay.Publications.Extensions.FragmentExtensions.html#Songhay_Publications_Extensions_FragmentExtensions_WithEdit_Songhay_Publications_Abstractions_IFragment_System_Action_Songhay_Publications_Abstractions_IFragment__
  name: WithEdit
  nameWithType: FragmentExtensions.WithEdit
  fullName: Songhay.Publications.Extensions.FragmentExtensions.WithEdit
- uid: System.Action{Songhay.Publications.Abstractions.IFragment}
  commentId: T:System.Action{Songhay.Publications.Abstractions.IFragment}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IFragment>
  nameWithType: Action<IFragment>
  fullName: System.Action<Songhay.Publications.Abstractions.IFragment>
  nameWithType.vb: Action(Of IFragment)
  fullName.vb: System.Action(Of Songhay.Publications.Abstractions.IFragment)
  name.vb: Action(Of IFragment)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Songhay.Publications.Abstractions.IFragment
    name: IFragment
    href: Songhay.Publications.Abstractions.IFragment.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.IFragment
    name: IFragment
    href: Songhay.Publications.Abstractions.IFragment.html
  - name: )
