### YamlMime:ManagedReference
items:
- uid: Songhay.Publications.Extensions.IDocumentExtensions
  commentId: T:Songhay.Publications.Extensions.IDocumentExtensions
  id: IDocumentExtensions
  parent: Songhay.Publications.Extensions
  children:
  - Songhay.Publications.Extensions.IDocumentExtensions.Clone(Songhay.Publications.Abstractions.IDocument)
  - Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IDocument},System.Func{Songhay.Publications.Abstractions.IDocument,System.Boolean})
  - Songhay.Publications.Extensions.IDocumentExtensions.HasFragments(Songhay.Publications.Abstractions.IDocument)
  - Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable(Songhay.Publications.Abstractions.IDocument)
  - Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults(Songhay.Publications.Abstractions.IDocument)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem(Songhay.Publications.Abstractions.IDocument,System.String)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument,System.Boolean)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument,Songhay.Abstractions.IGroupable)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IDocument)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument,System.Collections.Generic.IReadOnlyCollection{System.String},Microsoft.Extensions.Logging.ILogger)
  - Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults(Songhay.Publications.Abstractions.IDocument)
  - Songhay.Publications.Extensions.IDocumentExtensions.WithEdit(Songhay.Publications.Abstractions.IDocument,System.Action{Songhay.Publications.Abstractions.IDocument})
  - Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: IDocumentExtensions
  nameWithType: IDocumentExtensions
  fullName: Songhay.Publications.Extensions.IDocumentExtensions
  type: Class
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: IDocumentExtensions
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 8
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Extensions of <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class IDocumentExtensions
    content.vb: Public Module IDocumentExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Publications.Extensions.IDocumentExtensions.Clone(Songhay.Publications.Abstractions.IDocument)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.Clone(Songhay.Publications.Abstractions.IDocument)
  id: Clone(Songhay.Publications.Abstractions.IDocument)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: Clone(IDocument?)
  nameWithType: IDocumentExtensions.Clone(IDocument?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.Clone(Songhay.Publications.Abstractions.IDocument?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: Clone
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 21
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Clones the instance of <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Document? Clone(this IDocument? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The document.
    return:
      type: Songhay.Publications.Models.Document
    content.vb: Public Shared Function Clone(data As IDocument) As Document
  overload: Songhay.Publications.Extensions.IDocumentExtensions.Clone*
  nameWithType.vb: IDocumentExtensions.Clone(IDocument)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.Clone(Songhay.Publications.Abstractions.IDocument)
  name.vb: Clone(IDocument)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IDocument},System.Func{Songhay.Publications.Abstractions.IDocument,System.Boolean})
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IDocument},System.Func{Songhay.Publications.Abstractions.IDocument,System.Boolean})
  id: GetDocumentByPredicate(System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IDocument},System.Func{Songhay.Publications.Abstractions.IDocument,System.Boolean})
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: GetDocumentByPredicate(IEnumerable<IDocument>, Func<IDocument, bool>)
  nameWithType: IDocumentExtensions.GetDocumentByPredicate(IEnumerable<IDocument>, Func<IDocument, bool>)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate(System.Collections.Generic.IEnumerable<Songhay.Publications.Abstractions.IDocument>, System.Func<Songhay.Publications.Abstractions.IDocument, bool>)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: GetDocumentByPredicate
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 29
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Returns and traces the first <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>

    based on the specified predicate.
  example: []
  syntax:
    content: public static IDocument? GetDocumentByPredicate(this IEnumerable<IDocument> data, Func<IDocument, bool> predicate)
    parameters:
    - id: data
      type: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IDocument}
      description: The data.
    - id: predicate
      type: System.Func{Songhay.Publications.Abstractions.IDocument,System.Boolean}
      description: The predicate.
    return:
      type: Songhay.Publications.Abstractions.IDocument
    content.vb: Public Shared Function GetDocumentByPredicate(data As IEnumerable(Of IDocument), predicate As Func(Of IDocument, Boolean)) As IDocument
  overload: Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate*
  nameWithType.vb: IDocumentExtensions.GetDocumentByPredicate(IEnumerable(Of IDocument), Func(Of IDocument, Boolean))
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate(System.Collections.Generic.IEnumerable(Of Songhay.Publications.Abstractions.IDocument), System.Func(Of Songhay.Publications.Abstractions.IDocument, Boolean))
  name.vb: GetDocumentByPredicate(IEnumerable(Of IDocument), Func(Of IDocument, Boolean))
- uid: Songhay.Publications.Extensions.IDocumentExtensions.HasFragments(Songhay.Publications.Abstractions.IDocument)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.HasFragments(Songhay.Publications.Abstractions.IDocument)
  id: HasFragments(Songhay.Publications.Abstractions.IDocument)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: HasFragments(IDocument?)
  nameWithType: IDocumentExtensions.HasFragments(IDocument?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.HasFragments(Songhay.Publications.Abstractions.IDocument?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: HasFragments
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 45
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Returns <code>true</code> when the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>

    has any <xref href="Songhay.Publications.Models.Document.Fragments" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool HasFragments(this IDocument? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The data.
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasFragments(data As IDocument) As Boolean
  overload: Songhay.Publications.Extensions.IDocumentExtensions.HasFragments*
  nameWithType.vb: IDocumentExtensions.HasFragments(IDocument)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.HasFragments(Songhay.Publications.Abstractions.IDocument)
  name.vb: HasFragments(IDocument)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable(Songhay.Publications.Abstractions.IDocument)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable(Songhay.Publications.Abstractions.IDocument)
  id: IsTemplatable(Songhay.Publications.Abstractions.IDocument)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: IsTemplatable(IDocument?)
  nameWithType: IDocumentExtensions.IsTemplatable(IDocument?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable(Songhay.Publications.Abstractions.IDocument?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: IsTemplatable
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 65
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Determines whether the specified document is template-able.
  example: []
  syntax:
    content: public static bool IsTemplatable(this IDocument? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The document.
    return:
      type: System.Boolean
      description: <code>true</code> if the specified document is template-able; otherwise, <code>false</code>.
    content.vb: Public Shared Function IsTemplatable(data As IDocument) As Boolean
  overload: Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable*
  nameWithType.vb: IDocumentExtensions.IsTemplatable(IDocument)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable(Songhay.Publications.Abstractions.IDocument)
  name.vb: IsTemplatable(IDocument)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults(Songhay.Publications.Abstractions.IDocument)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults(Songhay.Publications.Abstractions.IDocument)
  id: SetDefaults(Songhay.Publications.Abstractions.IDocument)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: SetDefaults(IDocument?)
  nameWithType: IDocumentExtensions.SetDefaults(IDocument?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults(Songhay.Publications.Abstractions.IDocument?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: SetDefaults
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 72
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Sets the defaults.
  example: []
  syntax:
    content: public static void SetDefaults(this IDocument? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The document.
    content.vb: Public Shared Sub SetDefaults(data As IDocument)
  overload: Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults*
  nameWithType.vb: IDocumentExtensions.SetDefaults(IDocument)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults(Songhay.Publications.Abstractions.IDocument)
  name.vb: SetDefaults(IDocument)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem(Songhay.Publications.Abstractions.IDocument,System.String)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem(Songhay.Publications.Abstractions.IDocument,System.String)
  id: ToConventionalPublicationItem(Songhay.Publications.Abstractions.IDocument,System.String)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToConventionalPublicationItem(IDocument?, string?)
  nameWithType: IDocumentExtensions.ToConventionalPublicationItem(IDocument?, string?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem(Songhay.Publications.Abstractions.IDocument?, string?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToConventionalPublicationItem
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 87
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts <xref href="Songhay.Publications.Models.Document" data-throw-if-not-resolved="false"></xref> to the conventional publication item.
  example: []
  syntax:
    content: public static XElement? ToConventionalPublicationItem(this IDocument? data, string? templateFileName)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The data.
    - id: templateFileName
      type: System.String
      description: Name of the template file.
    return:
      type: System.Xml.Linq.XElement
    content.vb: Public Shared Function ToConventionalPublicationItem(data As IDocument, templateFileName As String) As XElement
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem*
  nameWithType.vb: IDocumentExtensions.ToConventionalPublicationItem(IDocument, String)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem(Songhay.Publications.Abstractions.IDocument, String)
  name.vb: ToConventionalPublicationItem(IDocument, String)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument)
  id: ToDisplayText(Songhay.Publications.Abstractions.IDocument)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToDisplayText(IDocument?)
  nameWithType: IDocumentExtensions.ToDisplayText(IDocument?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToDisplayText
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 105
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> into human-readable display text.
  example: []
  syntax:
    content: public static string ToDisplayText(this IDocument? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The data.
    return:
      type: System.String
    content.vb: Public Shared Function ToDisplayText(data As IDocument) As String
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText*
  nameWithType.vb: IDocumentExtensions.ToDisplayText(IDocument)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument)
  name.vb: ToDisplayText(IDocument)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument,System.Boolean)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument,System.Boolean)
  id: ToDisplayText(Songhay.Publications.Abstractions.IDocument,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToDisplayText(IDocument?, bool)
  nameWithType: IDocumentExtensions.ToDisplayText(IDocument?, bool)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument?, bool)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToDisplayText
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 112
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> into a display text.
  example: []
  syntax:
    content: public static string ToDisplayText(this IDocument? data, bool showIdOnly)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The data.
    - id: showIdOnly
      type: System.Boolean
      description: when <code>true</code> then display identifiers only
    return:
      type: System.String
    content.vb: Public Shared Function ToDisplayText(data As IDocument, showIdOnly As Boolean) As String
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText*
  nameWithType.vb: IDocumentExtensions.ToDisplayText(IDocument, Boolean)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText(Songhay.Publications.Abstractions.IDocument, Boolean)
  name.vb: ToDisplayText(IDocument, Boolean)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  id: ToMarkdownEntry(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToMarkdownEntry(IDocument?, string?, string?, ILogger?)
  nameWithType: IDocumentExtensions.ToMarkdownEntry(IDocument?, string?, string?, ILogger?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry(Songhay.Publications.Abstractions.IDocument?, string?, string?, Microsoft.Extensions.Logging.ILogger?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMarkdownEntry
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 160
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the specified <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> to <xref href="Songhay.Publications.Models.MarkdownEntry" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static MarkdownEntry? ToMarkdownEntry(this IDocument? document, string? entryPath, string? content, ILogger? logger)
    parameters:
    - id: document
      type: Songhay.Publications.Abstractions.IDocument
      description: the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>
    - id: entryPath
      type: System.String
      description: the entry path
    - id: content
      type: System.String
      description: the entry content
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    return:
      type: Songhay.Publications.Models.MarkdownEntry
    content.vb: Public Shared Function ToMarkdownEntry(document As IDocument, entryPath As String, content As String, logger As ILogger) As MarkdownEntry
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry*
  nameWithType.vb: IDocumentExtensions.ToMarkdownEntry(IDocument, String, String, ILogger)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry(Songhay.Publications.Abstractions.IDocument, String, String, Microsoft.Extensions.Logging.ILogger)
  name.vb: ToMarkdownEntry(IDocument, String, String, ILogger)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument)
  id: ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToMenuDisplayItemModel(IDocument?)
  nameWithType: IDocumentExtensions.ToMenuDisplayItemModel(IDocument?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMenuDisplayItemModel
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 195
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> into a menu display item model.
  example: []
  syntax:
    content: public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IDocument? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The document.
    return:
      type: Songhay.Models.MenuDisplayItemModel
    content.vb: Public Shared Function ToMenuDisplayItemModel(data As IDocument) As MenuDisplayItemModel
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel*
  nameWithType.vb: IDocumentExtensions.ToMenuDisplayItemModel(IDocument)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument)
  name.vb: ToMenuDisplayItemModel(IDocument)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument,Songhay.Abstractions.IGroupable)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument,Songhay.Abstractions.IGroupable)
  id: ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument,Songhay.Abstractions.IGroupable)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToMenuDisplayItemModel(IDocument?, IGroupable?)
  nameWithType: IDocumentExtensions.ToMenuDisplayItemModel(IDocument?, IGroupable?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument?, Songhay.Abstractions.IGroupable?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToMenuDisplayItemModel
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 203
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> into a menu display item model.
  example: []
  syntax:
    content: public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IDocument? data, IGroupable? group)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The document.
    - id: group
      type: Songhay.Abstractions.IGroupable
      description: The group.
    return:
      type: Songhay.Models.MenuDisplayItemModel
    content.vb: Public Shared Function ToMenuDisplayItemModel(data As IDocument, group As IGroupable) As MenuDisplayItemModel
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel*
  nameWithType.vb: IDocumentExtensions.ToMenuDisplayItemModel(IDocument, IGroupable)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel(Songhay.Publications.Abstractions.IDocument, Songhay.Abstractions.IGroupable)
  name.vb: ToMenuDisplayItemModel(IDocument, IGroupable)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IDocument)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IDocument)
  id: ToValidationResult(Songhay.Publications.Abstractions.IDocument)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToValidationResult(IDocument?)
  nameWithType: IDocumentExtensions.ToValidationResult(IDocument?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IDocument?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToValidationResult
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 225
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Converts the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> data to <xref href="FluentValidation.Results.ValidationResult" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ValidationResult ToValidationResult(this IDocument? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> data
    return:
      type: FluentValidation.Results.ValidationResult
    content.vb: Public Shared Function ToValidationResult(data As IDocument) As ValidationResult
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult*
  nameWithType.vb: IDocumentExtensions.ToValidationResult(IDocument)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult(Songhay.Publications.Abstractions.IDocument)
  name.vb: ToValidationResult(IDocument)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument,Microsoft.Extensions.Logging.ILogger)
  id: ToYaml(Songhay.Publications.Abstractions.IDocument,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToYaml(IDocument?, ILogger?)
  nameWithType: IDocumentExtensions.ToYaml(IDocument?, ILogger?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument?, Microsoft.Extensions.Logging.ILogger?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToYaml
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 242
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Converts the specified <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>

    to well-formed YAML.
  example: []
  syntax:
    content: public static string? ToYaml(this IDocument? document, ILogger? logger)
    parameters:
    - id: document
      type: Songhay.Publications.Abstractions.IDocument
      description: the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.String
    content.vb: Public Shared Function ToYaml(document As IDocument, logger As ILogger) As String
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml*
  nameWithType.vb: IDocumentExtensions.ToYaml(IDocument, ILogger)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument, Microsoft.Extensions.Logging.ILogger)
  name.vb: ToYaml(IDocument, ILogger)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument,System.Collections.Generic.IReadOnlyCollection{System.String},Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument,System.Collections.Generic.IReadOnlyCollection{System.String},Microsoft.Extensions.Logging.ILogger)
  id: ToYaml(Songhay.Publications.Abstractions.IDocument,System.Collections.Generic.IReadOnlyCollection{System.String},Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: ToYaml(IDocument?, IReadOnlyCollection<string>?, ILogger?)
  nameWithType: IDocumentExtensions.ToYaml(IDocument?, IReadOnlyCollection<string>?, ILogger?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument?, System.Collections.Generic.IReadOnlyCollection<string>?, Microsoft.Extensions.Logging.ILogger?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: ToYaml
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 251
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Converts the specified <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>

    to well-formed YAML.
  example: []
  syntax:
    content: public static string? ToYaml(this IDocument? document, IReadOnlyCollection<string>? contentLines, ILogger? logger)
    parameters:
    - id: document
      type: Songhay.Publications.Abstractions.IDocument
      description: the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>
    - id: contentLines
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
      description: the collection of content lines
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.String
    content.vb: Public Shared Function ToYaml(document As IDocument, contentLines As IReadOnlyCollection(Of String), logger As ILogger) As String
  overload: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml*
  nameWithType.vb: IDocumentExtensions.ToYaml(IDocument, IReadOnlyCollection(Of String), ILogger)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml(Songhay.Publications.Abstractions.IDocument, System.Collections.Generic.IReadOnlyCollection(Of String), Microsoft.Extensions.Logging.ILogger)
  name.vb: ToYaml(IDocument, IReadOnlyCollection(Of String), ILogger)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults(Songhay.Publications.Abstractions.IDocument)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults(Songhay.Publications.Abstractions.IDocument)
  id: WithDefaults(Songhay.Publications.Abstractions.IDocument)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: WithDefaults(IDocument?)
  nameWithType: IDocumentExtensions.WithDefaults(IDocument?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults(Songhay.Publications.Abstractions.IDocument?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: WithDefaults
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 305
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Returns <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref> with default values.
  example: []
  syntax:
    content: public static IDocument? WithDefaults(this IDocument? data)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The data.
    return:
      type: Songhay.Publications.Abstractions.IDocument
    content.vb: Public Shared Function WithDefaults(data As IDocument) As IDocument
  overload: Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults*
  nameWithType.vb: IDocumentExtensions.WithDefaults(IDocument)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults(Songhay.Publications.Abstractions.IDocument)
  name.vb: WithDefaults(IDocument)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.WithEdit(Songhay.Publications.Abstractions.IDocument,System.Action{Songhay.Publications.Abstractions.IDocument})
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.WithEdit(Songhay.Publications.Abstractions.IDocument,System.Action{Songhay.Publications.Abstractions.IDocument})
  id: WithEdit(Songhay.Publications.Abstractions.IDocument,System.Action{Songhay.Publications.Abstractions.IDocument})
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: WithEdit(IDocument?, Action<IDocument>?)
  nameWithType: IDocumentExtensions.WithEdit(IDocument?, Action<IDocument>?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.WithEdit(Songhay.Publications.Abstractions.IDocument?, System.Action<Songhay.Publications.Abstractions.IDocument>?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: WithEdit
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 318
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: >-
    Returns <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>

    after the specified edit <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IDocument WithEdit(this IDocument? data, Action<IDocument>? editAction)
    parameters:
    - id: data
      type: Songhay.Publications.Abstractions.IDocument
      description: The data.
    - id: editAction
      type: System.Action{Songhay.Publications.Abstractions.IDocument}
      description: The edit action.
    return:
      type: Songhay.Publications.Abstractions.IDocument
    content.vb: Public Shared Function WithEdit(data As IDocument, editAction As Action(Of IDocument)) As IDocument
  overload: Songhay.Publications.Extensions.IDocumentExtensions.WithEdit*
  nameWithType.vb: IDocumentExtensions.WithEdit(IDocument, Action(Of IDocument))
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.WithEdit(Songhay.Publications.Abstractions.IDocument, System.Action(Of Songhay.Publications.Abstractions.IDocument))
  name.vb: WithEdit(IDocument, Action(Of IDocument))
- uid: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  id: WritePublicationEntryWithJsonFrontMatter(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: WritePublicationEntryWithJsonFrontMatter(IDocument?, string?, string?, ILogger?)
  nameWithType: IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(IDocument?, string?, string?, ILogger?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(Songhay.Publications.Abstractions.IDocument?, string?, string?, Microsoft.Extensions.Logging.ILogger?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: WritePublicationEntryWithJsonFrontMatter
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 332
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Writes an entry with JSON front matter to the specified entry path.
  example: []
  syntax:
    content: public static void WritePublicationEntryWithJsonFrontMatter(this IDocument? document, string? entryPath, string? content, ILogger? logger)
    parameters:
    - id: document
      type: Songhay.Publications.Abstractions.IDocument
      description: the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>
    - id: entryPath
      type: System.String
      description: the entry path
    - id: content
      type: System.String
      description: the entry content
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub WritePublicationEntryWithJsonFrontMatter(document As IDocument, entryPath As String, content As String, logger As ILogger)
  overload: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter*
  nameWithType.vb: IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(IDocument, String, String, ILogger)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(Songhay.Publications.Abstractions.IDocument, String, String, Microsoft.Extensions.Logging.ILogger)
  name.vb: WritePublicationEntryWithJsonFrontMatter(IDocument, String, String, ILogger)
- uid: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  id: WritePublicationEntryWithYamlFrontMatter(Songhay.Publications.Abstractions.IDocument,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Publications.Extensions.IDocumentExtensions
  langs:
  - csharp
  - vb
  name: WritePublicationEntryWithYamlFrontMatter(IDocument?, string?, string?, ILogger?)
  nameWithType: IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(IDocument?, string?, string?, ILogger?)
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(Songhay.Publications.Abstractions.IDocument?, string?, string?, Microsoft.Extensions.Logging.ILogger?)
  type: Method
  source:
    remote:
      path: Songhay.Publications/Extensions/IDocumentExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/Songhay.Publications.git
    id: WritePublicationEntryWithYamlFrontMatter
    path: ../Songhay.Publications/Extensions/IDocumentExtensions.cs
    startLine: 377
  assemblies:
  - Songhay.Publications
  namespace: Songhay.Publications.Extensions
  summary: Writes an entry with YAML front matter to the specified entry path.
  example: []
  syntax:
    content: public static void WritePublicationEntryWithYamlFrontMatter(this IDocument? document, string? entryPath, string? content, ILogger? logger)
    parameters:
    - id: document
      type: Songhay.Publications.Abstractions.IDocument
      description: the <xref href="Songhay.Publications.Abstractions.IDocument" data-throw-if-not-resolved="false"></xref>
    - id: entryPath
      type: System.String
      description: the entry path
    - id: content
      type: System.String
      description: the entry content
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub WritePublicationEntryWithYamlFrontMatter(document As IDocument, entryPath As String, content As String, logger As ILogger)
  overload: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter*
  nameWithType.vb: IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(IDocument, String, String, ILogger)
  fullName.vb: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(Songhay.Publications.Abstractions.IDocument, String, String, Microsoft.Extensions.Logging.ILogger)
  name.vb: WritePublicationEntryWithYamlFrontMatter(IDocument, String, String, ILogger)
references:
- uid: Songhay.Publications.Abstractions.IDocument
  commentId: T:Songhay.Publications.Abstractions.IDocument
  parent: Songhay.Publications.Abstractions
  href: Songhay.Publications.Abstractions.IDocument.html
  name: IDocument
  nameWithType: IDocument
  fullName: Songhay.Publications.Abstractions.IDocument
- uid: Songhay.Publications.Extensions
  commentId: N:Songhay.Publications.Extensions
  href: Songhay.html
  name: Songhay.Publications.Extensions
  nameWithType: Songhay.Publications.Extensions
  fullName: Songhay.Publications.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Extensions
    name: Extensions
    href: Songhay.Publications.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Extensions
    name: Extensions
    href: Songhay.Publications.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Songhay.Publications.Abstractions
  commentId: N:Songhay.Publications.Abstractions
  href: Songhay.html
  name: Songhay.Publications.Abstractions
  nameWithType: Songhay.Publications.Abstractions
  fullName: Songhay.Publications.Abstractions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Abstractions
    name: Abstractions
    href: Songhay.Publications.Abstractions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Abstractions
    name: Abstractions
    href: Songhay.Publications.Abstractions.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Songhay.Publications.Extensions.IDocumentExtensions.Clone*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.Clone
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_Clone_Songhay_Publications_Abstractions_IDocument_
  name: Clone
  nameWithType: IDocumentExtensions.Clone
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.Clone
- uid: Songhay.Publications.Models.Document
  commentId: T:Songhay.Publications.Models.Document
  parent: Songhay.Publications.Models
  href: Songhay.Publications.Models.Document.html
  name: Document
  nameWithType: Document
  fullName: Songhay.Publications.Models.Document
- uid: Songhay.Publications.Models
  commentId: N:Songhay.Publications.Models
  href: Songhay.html
  name: Songhay.Publications.Models
  nameWithType: Songhay.Publications.Models
  fullName: Songhay.Publications.Models
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Models
    name: Models
    href: Songhay.Publications.Models.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Publications
    name: Publications
    href: Songhay.Publications.html
  - name: .
  - uid: Songhay.Publications.Models
    name: Models
    href: Songhay.Publications.Models.html
- uid: Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_GetDocumentByPredicate_System_Collections_Generic_IEnumerable_Songhay_Publications_Abstractions_IDocument__System_Func_Songhay_Publications_Abstractions_IDocument_System_Boolean__
  name: GetDocumentByPredicate
  nameWithType: IDocumentExtensions.GetDocumentByPredicate
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.GetDocumentByPredicate
- uid: System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IDocument}
  commentId: T:System.Collections.Generic.IEnumerable{Songhay.Publications.Abstractions.IDocument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IDocument>
  nameWithType: IEnumerable<IDocument>
  fullName: System.Collections.Generic.IEnumerable<Songhay.Publications.Abstractions.IDocument>
  nameWithType.vb: IEnumerable(Of IDocument)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Songhay.Publications.Abstractions.IDocument)
  name.vb: IEnumerable(Of IDocument)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Songhay.Publications.Abstractions.IDocument
    name: IDocument
    href: Songhay.Publications.Abstractions.IDocument.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.IDocument
    name: IDocument
    href: Songhay.Publications.Abstractions.IDocument.html
  - name: )
- uid: System.Func{Songhay.Publications.Abstractions.IDocument,System.Boolean}
  commentId: T:System.Func{Songhay.Publications.Abstractions.IDocument,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IDocument, bool>
  nameWithType: Func<IDocument, bool>
  fullName: System.Func<Songhay.Publications.Abstractions.IDocument, bool>
  nameWithType.vb: Func(Of IDocument, Boolean)
  fullName.vb: System.Func(Of Songhay.Publications.Abstractions.IDocument, Boolean)
  name.vb: Func(Of IDocument, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Songhay.Publications.Abstractions.IDocument
    name: IDocument
    href: Songhay.Publications.Abstractions.IDocument.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.IDocument
    name: IDocument
    href: Songhay.Publications.Abstractions.IDocument.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Songhay.Publications.Models.Document.Fragments
  commentId: P:Songhay.Publications.Models.Document.Fragments
  parent: Songhay.Publications.Models.Document
  href: Songhay.Publications.Models.Document.html#Songhay_Publications_Models_Document_Fragments
  name: Fragments
  nameWithType: Document.Fragments
  fullName: Songhay.Publications.Models.Document.Fragments
- uid: Songhay.Publications.Extensions.IDocumentExtensions.HasFragments*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.HasFragments
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_HasFragments_Songhay_Publications_Abstractions_IDocument_
  name: HasFragments
  nameWithType: IDocumentExtensions.HasFragments
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.HasFragments
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_IsTemplatable_Songhay_Publications_Abstractions_IDocument_
  name: IsTemplatable
  nameWithType: IDocumentExtensions.IsTemplatable
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.IsTemplatable
- uid: Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_SetDefaults_Songhay_Publications_Abstractions_IDocument_
  name: SetDefaults
  nameWithType: IDocumentExtensions.SetDefaults
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.SetDefaults
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_ToConventionalPublicationItem_Songhay_Publications_Abstractions_IDocument_System_String_
  name: ToConventionalPublicationItem
  nameWithType: IDocumentExtensions.ToConventionalPublicationItem
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToConventionalPublicationItem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.linq.xelement
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.linq
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_ToDisplayText_Songhay_Publications_Abstractions_IDocument_
  name: ToDisplayText
  nameWithType: IDocumentExtensions.ToDisplayText
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToDisplayText
- uid: Songhay.Publications.Models.MarkdownEntry
  commentId: T:Songhay.Publications.Models.MarkdownEntry
  parent: Songhay.Publications.Models
  href: Songhay.Publications.Models.MarkdownEntry.html
  name: MarkdownEntry
  nameWithType: MarkdownEntry
  fullName: Songhay.Publications.Models.MarkdownEntry
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_ToMarkdownEntry_Songhay_Publications_Abstractions_IDocument_System_String_System_String_Microsoft_Extensions_Logging_ILogger_
  name: ToMarkdownEntry
  nameWithType: IDocumentExtensions.ToMarkdownEntry
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToMarkdownEntry
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_ToMenuDisplayItemModel_Songhay_Publications_Abstractions_IDocument_
  name: ToMenuDisplayItemModel
  nameWithType: IDocumentExtensions.ToMenuDisplayItemModel
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToMenuDisplayItemModel
- uid: Songhay.Models.MenuDisplayItemModel
  commentId: T:Songhay.Models.MenuDisplayItemModel
  parent: Songhay.Models
  isExternal: true
  name: MenuDisplayItemModel
  nameWithType: MenuDisplayItemModel
  fullName: Songhay.Models.MenuDisplayItemModel
- uid: Songhay.Models
  commentId: N:Songhay.Models
  isExternal: true
  name: Songhay.Models
  nameWithType: Songhay.Models
  fullName: Songhay.Models
  spec.csharp:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Models
    name: Models
    isExternal: true
  spec.vb:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Models
    name: Models
    isExternal: true
- uid: Songhay.Abstractions.IGroupable
  commentId: T:Songhay.Abstractions.IGroupable
  parent: Songhay.Abstractions
  isExternal: true
  name: IGroupable
  nameWithType: IGroupable
  fullName: Songhay.Abstractions.IGroupable
- uid: Songhay.Abstractions
  commentId: N:Songhay.Abstractions
  isExternal: true
  name: Songhay.Abstractions
  nameWithType: Songhay.Abstractions
  fullName: Songhay.Abstractions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: Songhay
    name: Songhay
    isExternal: true
  - name: .
  - uid: Songhay.Abstractions
    name: Abstractions
    isExternal: true
- uid: FluentValidation.Results.ValidationResult
  commentId: T:FluentValidation.Results.ValidationResult
  parent: FluentValidation.Results
  isExternal: true
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: FluentValidation.Results.ValidationResult
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_ToValidationResult_Songhay_Publications_Abstractions_IDocument_
  name: ToValidationResult
  nameWithType: IDocumentExtensions.ToValidationResult
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToValidationResult
- uid: FluentValidation.Results
  commentId: N:FluentValidation.Results
  isExternal: true
  name: FluentValidation.Results
  nameWithType: FluentValidation.Results
  fullName: FluentValidation.Results
  spec.csharp:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
  spec.vb:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
- uid: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.ToYaml
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_ToYaml_Songhay_Publications_Abstractions_IDocument_Microsoft_Extensions_Logging_ILogger_
  name: ToYaml
  nameWithType: IDocumentExtensions.ToYaml
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.ToYaml
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<string>
  nameWithType: IReadOnlyCollection<string>
  fullName: System.Collections.Generic.IReadOnlyCollection<string>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_WithDefaults_Songhay_Publications_Abstractions_IDocument_
  name: WithDefaults
  nameWithType: IDocumentExtensions.WithDefaults
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.WithDefaults
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Publications.Extensions.IDocumentExtensions.WithEdit*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.WithEdit
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_WithEdit_Songhay_Publications_Abstractions_IDocument_System_Action_Songhay_Publications_Abstractions_IDocument__
  name: WithEdit
  nameWithType: IDocumentExtensions.WithEdit
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.WithEdit
- uid: System.Action{Songhay.Publications.Abstractions.IDocument}
  commentId: T:System.Action{Songhay.Publications.Abstractions.IDocument}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IDocument>
  nameWithType: Action<IDocument>
  fullName: System.Action<Songhay.Publications.Abstractions.IDocument>
  nameWithType.vb: Action(Of IDocument)
  fullName.vb: System.Action(Of Songhay.Publications.Abstractions.IDocument)
  name.vb: Action(Of IDocument)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Songhay.Publications.Abstractions.IDocument
    name: IDocument
    href: Songhay.Publications.Abstractions.IDocument.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Publications.Abstractions.IDocument
    name: IDocument
    href: Songhay.Publications.Abstractions.IDocument.html
  - name: )
- uid: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_WritePublicationEntryWithJsonFrontMatter_Songhay_Publications_Abstractions_IDocument_System_String_System_String_Microsoft_Extensions_Logging_ILogger_
  name: WritePublicationEntryWithJsonFrontMatter
  nameWithType: IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter
- uid: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter*
  commentId: Overload:Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter
  href: Songhay.Publications.Extensions.IDocumentExtensions.html#Songhay_Publications_Extensions_IDocumentExtensions_WritePublicationEntryWithYamlFrontMatter_Songhay_Publications_Abstractions_IDocument_System_String_System_String_Microsoft_Extensions_Logging_ILogger_
  name: WritePublicationEntryWithYamlFrontMatter
  nameWithType: IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter
  fullName: Songhay.Publications.Extensions.IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter
