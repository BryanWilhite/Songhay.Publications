{
  "index.html": {
    "href": "index.html",
    "title": "SonghayCore API | Songhay.Publications.DataAccess API",
    "keywords": "SonghayCore API view the latest documentation source repository"
  },
  "latest/Songhay.Publications.Abstractions.IDocument.html": {
    "href": "latest/Songhay.Publications.Abstractions.IDocument.html",
    "title": "Interface IDocument | Songhay.Publications.DataAccess API",
    "keywords": "Interface IDocument Namespace Songhay.Publications.Abstractions Assembly Songhay.Publications.dll Publications Document interface public interface IDocument : ITemporal Inherited Members ITemporal.EndDate ITemporal.InceptDate ITemporal.ModificationDate Extension Methods IDocumentExtensions.Clone(IDocument?) IDocumentExtensions.HasFragments(IDocument?) IDocumentExtensions.IsTemplatable(IDocument?) IDocumentExtensions.SetDefaults(IDocument?) IDocumentExtensions.ToConventionalPublicationItem(IDocument?, string?) IDocumentExtensions.ToDisplayText(IDocument?) IDocumentExtensions.ToDisplayText(IDocument?, bool) IDocumentExtensions.ToMarkdownEntry(IDocument?, string?, string?, ILogger?) IDocumentExtensions.ToMenuDisplayItemModel(IDocument?) IDocumentExtensions.ToMenuDisplayItemModel(IDocument?, IGroupable?) IDocumentExtensions.ToValidationResult(IDocument?) IDocumentExtensions.ToYaml(IDocument?, ILogger?) IDocumentExtensions.ToYaml(IDocument?, IReadOnlyCollection<string>?, ILogger?) IDocumentExtensions.WithDefaults(IDocument?) IDocumentExtensions.WithEdit(IDocument?, Action<IDocument>?) IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(IDocument?, string?, string?, ILogger?) IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(IDocument?, string?, string?, ILogger?) JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Gets or sets the client identifier. string? ClientId { get; set; } Property Value string DocumentId Gets or sets the document identifier. int? DocumentId { get; set; } Property Value int? DocumentShortName Gets or sets the short name of the document. string? DocumentShortName { get; set; } Property Value string FileName Gets or sets the name of the file. string? FileName { get; set; } Property Value string IsActive Gets or sets the is active. bool? IsActive { get; set; } Property Value bool? IsRoot Gets or sets the is root. bool? IsRoot { get; set; } Property Value bool? Path Gets or sets the path. string? Path { get; set; } Property Value string SegmentId Gets or sets the segment identifier. int? SegmentId { get; set; } Property Value int? SortOrdinal Gets or sets the sort ordinal. byte? SortOrdinal { get; set; } Property Value byte? Tag Gets or sets the tag. string? Tag { get; set; } Property Value string TemplateId Gets or sets the template identifier. int? TemplateId { get; set; } Property Value int? Title Gets or sets the title. string? Title { get; set; } Property Value string"
  },
  "latest/Songhay.Publications.Abstractions.IFragment.html": {
    "href": "latest/Songhay.Publications.Abstractions.IFragment.html",
    "title": "Interface IFragment | Songhay.Publications.DataAccess API",
    "keywords": "Interface IFragment Namespace Songhay.Publications.Abstractions Assembly Songhay.Publications.dll Publications Fragment interface public interface IFragment : ITemporal Inherited Members ITemporal.EndDate ITemporal.InceptDate ITemporal.ModificationDate Extension Methods FragmentExtensions.Clone(IFragment?) FragmentExtensions.SetDefaults(IFragment?) FragmentExtensions.ToDisplayText(IFragment?) FragmentExtensions.ToDisplayText(IFragment?, bool) FragmentExtensions.ToMenuDisplayItemModel(IFragment?) FragmentExtensions.ToMenuDisplayItemModel(IFragment?, IGroupable?) FragmentExtensions.ToMenuDisplayItemModel(IFragment?, IGroupable?, bool) FragmentExtensions.ToMenuDisplayItemModel(IFragment?, bool) FragmentExtensions.ToValidationResult(IFragment?) FragmentExtensions.WithDefaults(IFragment?) FragmentExtensions.WithEdit(IFragment?, Action<IFragment>?) JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Gets or sets the client identifier. string? ClientId { get; set; } Property Value string Content Gets or sets the content. string? Content { get; set; } Property Value string DocumentId Gets or sets the document identifier. int? DocumentId { get; set; } Property Value int? FragmentDisplayName Gets or sets the display name of the fragment. string? FragmentDisplayName { get; set; } Property Value string FragmentId Gets or sets the fragment identifier. int? FragmentId { get; set; } Property Value int? FragmentName Gets or sets the name of the fragment. string? FragmentName { get; set; } Property Value string IsActive Gets or sets the is active. bool? IsActive { get; set; } Property Value bool? IsNext Gets or sets the is next. bool? IsNext { get; set; } Property Value bool? IsPrevious Gets or sets the is previous. bool? IsPrevious { get; set; } Property Value bool? IsWrapper Gets or sets the is wrapper. bool? IsWrapper { get; set; } Property Value bool? NextFragmentId Gets or sets the next fragment identifier. int? NextFragmentId { get; set; } Property Value int? PrevFragmentId Gets or sets the previous fragment identifier. int? PrevFragmentId { get; set; } Property Value int? SortOrdinal Gets or sets the sort ordinal. byte? SortOrdinal { get; set; } Property Value byte?"
  },
  "latest/Songhay.Publications.Abstractions.IIndexEntry.html": {
    "href": "latest/Songhay.Publications.Abstractions.IIndexEntry.html",
    "title": "Interface IIndexEntry | Songhay.Publications.DataAccess API",
    "keywords": "Interface IIndexEntry Namespace Songhay.Publications.Abstractions Assembly Songhay.Publications.dll Defines a Publication Index Entry public interface IIndexEntry : ISegment, ITemporal Inherited Members ISegment.SegmentId ISegment.SegmentName ISegment.SortOrdinal ISegment.ParentSegmentId ISegment.ClientId ISegment.IsActive ITemporal.EndDate ITemporal.InceptDate ITemporal.ModificationDate Extension Methods SegmentExtensions.Clone(ISegment?) SegmentExtensions.HasDocuments(ISegment?) SegmentExtensions.SetDefaults(ISegment?) SegmentExtensions.ToDisplayText(ISegment?) SegmentExtensions.ToDisplayText(ISegment?, bool) SegmentExtensions.ToMenuDisplayItemModel(ISegment?) SegmentExtensions.ToMenuDisplayItemModel(ISegment?, IGroupable?) SegmentExtensions.ToPublicationIndexEntry(ISegment?) SegmentExtensions.ToValidationResult(ISegment?) SegmentExtensions.WithDefaults(ISegment?) SegmentExtensions.WithEdit(ISegment?, Action<ISegment>?) JsonNodeExtensions.ToJsonNode(object?) Properties Documents Index Documents IDocument[] Documents { get; set; } Property Value IDocument[] Segments Index Segments IIndexEntry[] Segments { get; set; } Property Value IIndexEntry[]"
  },
  "latest/Songhay.Publications.Abstractions.IIndexKeyword.html": {
    "href": "latest/Songhay.Publications.Abstractions.IIndexKeyword.html",
    "title": "Interface IIndexKeyword | Songhay.Publications.DataAccess API",
    "keywords": "Interface IIndexKeyword Namespace Songhay.Publications.Abstractions Assembly Songhay.Publications.dll Publication Index Keyword public interface IIndexKeyword : ITemporal Inherited Members ITemporal.EndDate ITemporal.InceptDate ITemporal.ModificationDate Extension Methods JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Index Keyword Group Client ID string? ClientId { get; set; } Property Value string Id Index Keyword Group ID int? Id { get; set; } Property Value int? KeywordValue Gets or sets the keyword value. string? KeywordValue { get; set; } Property Value string"
  },
  "latest/Songhay.Publications.Abstractions.IIndexKeywordGroup.html": {
    "href": "latest/Songhay.Publications.Abstractions.IIndexKeywordGroup.html",
    "title": "Interface IIndexKeywordGroup | Songhay.Publications.DataAccess API",
    "keywords": "Interface IIndexKeywordGroup Namespace Songhay.Publications.Abstractions Assembly Songhay.Publications.dll Publication Index Keyword Group public interface IIndexKeywordGroup : ITemporal Inherited Members ITemporal.EndDate ITemporal.InceptDate ITemporal.ModificationDate Extension Methods JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Index Keyword Group Client ID string? ClientId { get; set; } Property Value string Id Index Keyword Group ID int? Id { get; set; } Property Value int? Name Index Keyword Group Name string? Name { get; set; } Property Value string"
  },
  "latest/Songhay.Publications.Abstractions.ISegment.html": {
    "href": "latest/Songhay.Publications.Abstractions.ISegment.html",
    "title": "Interface ISegment | Songhay.Publications.DataAccess API",
    "keywords": "Interface ISegment Namespace Songhay.Publications.Abstractions Assembly Songhay.Publications.dll Publications Segment interface public interface ISegment : ITemporal Inherited Members ITemporal.EndDate ITemporal.InceptDate ITemporal.ModificationDate Extension Methods SegmentExtensions.Clone(ISegment?) SegmentExtensions.HasDocuments(ISegment?) SegmentExtensions.SetDefaults(ISegment?) SegmentExtensions.ToDisplayText(ISegment?) SegmentExtensions.ToDisplayText(ISegment?, bool) SegmentExtensions.ToMenuDisplayItemModel(ISegment?) SegmentExtensions.ToMenuDisplayItemModel(ISegment?, IGroupable?) SegmentExtensions.ToPublicationIndexEntry(ISegment?) SegmentExtensions.ToValidationResult(ISegment?) SegmentExtensions.WithDefaults(ISegment?) SegmentExtensions.WithEdit(ISegment?, Action<ISegment>?) JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Gets or sets the client identifier. string? ClientId { get; set; } Property Value string IsActive Gets or sets the is active. bool? IsActive { get; set; } Property Value bool? ParentSegmentId Gets or sets the parent segment identifier. int? ParentSegmentId { get; set; } Property Value int? SegmentId Gets or sets the segment identifier. int? SegmentId { get; set; } Property Value int? SegmentName Gets or sets the name of the segment. string? SegmentName { get; set; } Property Value string SortOrdinal Gets or sets the sort ordinal. byte? SortOrdinal { get; set; } Property Value byte?"
  },
  "latest/Songhay.Publications.Abstractions.html": {
    "href": "latest/Songhay.Publications.Abstractions.html",
    "title": "Namespace Songhay.Publications.Abstractions | Songhay.Publications.DataAccess API",
    "keywords": "Namespace Songhay.Publications.Abstractions Interfaces IDocument Publications Document interface IFragment Publications Fragment interface IIndexEntry Defines a Publication Index Entry IIndexKeyword Publication Index Keyword IIndexKeywordGroup Publication Index Keyword Group ISegment Publications Segment interface"
  },
  "latest/Songhay.Publications.Activities.MarkdownEntryActivity.html": {
    "href": "latest/Songhay.Publications.Activities.MarkdownEntryActivity.html",
    "title": "Class MarkdownEntryActivity | Songhay.Publications.DataAccess API",
    "keywords": "Class MarkdownEntryActivity Namespace Songhay.Publications.Activities Assembly Songhay.Publications.dll Songhay.Abstractions.IActivity implementation for MarkdownEntry. public class MarkdownEntryActivity : IActivityTask Inheritance object MarkdownEntryActivity Implements IActivityTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors MarkdownEntryActivity(IConfiguration, ILogger<MarkdownEntryActivity>) Initializes a new instance of the MarkdownEntryActivity class. public MarkdownEntryActivity(IConfiguration configuration, ILogger<MarkdownEntryActivity> logger) Parameters configuration IConfiguration the IConfiguration logger ILogger<MarkdownEntryActivity> the ILogger Methods StartAsync() Starts the Songhay.Abstractions.IActivity. public Task StartAsync() Returns Task See Also IActivity"
  },
  "latest/Songhay.Publications.Activities.SearchIndexActivity.html": {
    "href": "latest/Songhay.Publications.Activities.SearchIndexActivity.html",
    "title": "Class SearchIndexActivity | Songhay.Publications.DataAccess API",
    "keywords": "Class SearchIndexActivity Namespace Songhay.Publications.Activities Assembly Songhay.Publications.dll Songhay.Abstractions.IActivity implementation for Publication Search Indices public class SearchIndexActivity : IActivityTask Inheritance object SearchIndexActivity Implements IActivityTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors SearchIndexActivity(IConfiguration, ILogger<SearchIndexActivity>) Initializes a new instance of the MarkdownEntryActivity class. public SearchIndexActivity(IConfiguration configuration, ILogger<SearchIndexActivity> logger) Parameters configuration IConfiguration the IConfiguration logger ILogger<SearchIndexActivity> the ILogger Methods StartAsync() Starts the Songhay.Abstractions.IActivity. public Task StartAsync() Returns Task See Also IActivity IActivityTask"
  },
  "latest/Songhay.Publications.Activities.html": {
    "href": "latest/Songhay.Publications.Activities.html",
    "title": "Namespace Songhay.Publications.Activities | Songhay.Publications.DataAccess API",
    "keywords": "Namespace Songhay.Publications.Activities Classes MarkdownEntryActivity Songhay.Abstractions.IActivity implementation for MarkdownEntry. SearchIndexActivity Songhay.Abstractions.IActivity implementation for Publication Search Indices"
  },
  "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.DocumentEntityTypeConfiguration.html": {
    "href": "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.DocumentEntityTypeConfiguration.html",
    "title": "Class DocumentEntityTypeConfiguration | Songhay.Publications.DataAccess API",
    "keywords": "Class DocumentEntityTypeConfiguration Namespace Songhay.Publications.DataAccess.EntityTypeConfigurations Assembly Songhay.Publications.DataAccess.dll public class DocumentEntityTypeConfiguration : IEntityTypeConfiguration<Document> Inheritance object DocumentEntityTypeConfiguration Implements IEntityTypeConfiguration<Document> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Methods Configure(EntityTypeBuilder<Document>) Configures the entity of type Document. public void Configure(EntityTypeBuilder<Document> builder) Parameters builder EntityTypeBuilder<Document> The builder to be used to configure the entity type."
  },
  "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.ImageCandidateEntityTypeConfiguration.html": {
    "href": "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.ImageCandidateEntityTypeConfiguration.html",
    "title": "Class ImageCandidateEntityTypeConfiguration | Songhay.Publications.DataAccess API",
    "keywords": "Class ImageCandidateEntityTypeConfiguration Namespace Songhay.Publications.DataAccess.EntityTypeConfigurations Assembly Songhay.Publications.DataAccess.dll public class ImageCandidateEntityTypeConfiguration : IEntityTypeConfiguration<ImageCandidate> Inheritance object ImageCandidateEntityTypeConfiguration Implements IEntityTypeConfiguration<ImageCandidate> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Methods Configure(EntityTypeBuilder<ImageCandidate>) Configures the entity of type ImageCandidate. public void Configure(EntityTypeBuilder<ImageCandidate> builder) Parameters builder EntityTypeBuilder<ImageCandidate> The builder to be used to configure the entity type."
  },
  "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.IndexKeywordEntityTypeConfiguration.html": {
    "href": "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.IndexKeywordEntityTypeConfiguration.html",
    "title": "Class IndexKeywordEntityTypeConfiguration | Songhay.Publications.DataAccess API",
    "keywords": "Class IndexKeywordEntityTypeConfiguration Namespace Songhay.Publications.DataAccess.EntityTypeConfigurations Assembly Songhay.Publications.DataAccess.dll public class IndexKeywordEntityTypeConfiguration : IEntityTypeConfiguration<IndexKeyword> Inheritance object IndexKeywordEntityTypeConfiguration Implements IEntityTypeConfiguration<IndexKeyword> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Methods Configure(EntityTypeBuilder<IndexKeyword>) Configures the entity of type IndexKeyword. public void Configure(EntityTypeBuilder<IndexKeyword> builder) Parameters builder EntityTypeBuilder<IndexKeyword> The builder to be used to configure the entity type."
  },
  "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.IndexKeywordGroupEntityTypeConfiguration.html": {
    "href": "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.IndexKeywordGroupEntityTypeConfiguration.html",
    "title": "Class IndexKeywordGroupEntityTypeConfiguration | Songhay.Publications.DataAccess API",
    "keywords": "Class IndexKeywordGroupEntityTypeConfiguration Namespace Songhay.Publications.DataAccess.EntityTypeConfigurations Assembly Songhay.Publications.DataAccess.dll public class IndexKeywordGroupEntityTypeConfiguration : IEntityTypeConfiguration<IndexKeywordGroup> Inheritance object IndexKeywordGroupEntityTypeConfiguration Implements IEntityTypeConfiguration<IndexKeywordGroup> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Methods Configure(EntityTypeBuilder<IndexKeywordGroup>) Configures the entity of type IndexKeywordGroup. public void Configure(EntityTypeBuilder<IndexKeywordGroup> builder) Parameters builder EntityTypeBuilder<IndexKeywordGroup> The builder to be used to configure the entity type."
  },
  "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.ResponsiveImageEntityTypeConfiguration.html": {
    "href": "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.ResponsiveImageEntityTypeConfiguration.html",
    "title": "Class ResponsiveImageEntityTypeConfiguration | Songhay.Publications.DataAccess API",
    "keywords": "Class ResponsiveImageEntityTypeConfiguration Namespace Songhay.Publications.DataAccess.EntityTypeConfigurations Assembly Songhay.Publications.DataAccess.dll public class ResponsiveImageEntityTypeConfiguration : IEntityTypeConfiguration<ResponsiveImage> Inheritance object ResponsiveImageEntityTypeConfiguration Implements IEntityTypeConfiguration<ResponsiveImage> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Methods Configure(EntityTypeBuilder<ResponsiveImage>) Configures the entity of type ResponsiveImage. public void Configure(EntityTypeBuilder<ResponsiveImage> builder) Parameters builder EntityTypeBuilder<ResponsiveImage> The builder to be used to configure the entity type."
  },
  "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.SegmentEntityTypeConfiguration.html": {
    "href": "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.SegmentEntityTypeConfiguration.html",
    "title": "Class SegmentEntityTypeConfiguration | Songhay.Publications.DataAccess API",
    "keywords": "Class SegmentEntityTypeConfiguration Namespace Songhay.Publications.DataAccess.EntityTypeConfigurations Assembly Songhay.Publications.DataAccess.dll public class SegmentEntityTypeConfiguration : IEntityTypeConfiguration<Segment> Inheritance object SegmentEntityTypeConfiguration Implements IEntityTypeConfiguration<Segment> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Methods Configure(EntityTypeBuilder<Segment>) Configures the entity of type Segment. public void Configure(EntityTypeBuilder<Segment> builder) Parameters builder EntityTypeBuilder<Segment> The builder to be used to configure the entity type."
  },
  "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.html": {
    "href": "latest/Songhay.Publications.DataAccess.EntityTypeConfigurations.html",
    "title": "Namespace Songhay.Publications.DataAccess.EntityTypeConfigurations | Songhay.Publications.DataAccess API",
    "keywords": "Namespace Songhay.Publications.DataAccess.EntityTypeConfigurations Classes DocumentEntityTypeConfiguration ImageCandidateEntityTypeConfiguration IndexKeywordEntityTypeConfiguration IndexKeywordGroupEntityTypeConfiguration ResponsiveImageEntityTypeConfiguration SegmentEntityTypeConfiguration"
  },
  "latest/Songhay.Publications.DataAccess.PublicationsDbContext.html": {
    "href": "latest/Songhay.Publications.DataAccess.PublicationsDbContext.html",
    "title": "Class PublicationsDbContext | Songhay.Publications.DataAccess API",
    "keywords": "Class PublicationsDbContext Namespace Songhay.Publications.DataAccess Assembly Songhay.Publications.DataAccess.dll The DbContext sub-class for Entity Framework Core. public class PublicationsDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext PublicationsDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors PublicationsDbContext(DbContextOptions<PublicationsDbContext>) Initializes a new instance of PublicationsDbContext public PublicationsDbContext(DbContextOptions<PublicationsDbContext> options) Parameters options DbContextOptions<PublicationsDbContext> the DbContextOptions Remarks This constructor is optimized for IServiceCollection dependency injection in ASP.NET or the Generic .NET Host. For more detail, see “DbContext Lifetime, Configuration, and Initialization” [https://learn.microsoft.com/en-us/ef/core/dbcontext-configuration/] Example: public void ConfigureServices(IServiceCollection services) { services.AddDbContextFactory<ApplicationDbContext>(options => options.UseSqlServer(\"<your connection string>\")); } Properties Documents The DbSet<TEntity> of Document. public DbSet<Document>? Documents { get; set; } Property Value DbSet<Document> ImageCandidates The DbSet<TEntity> of ImageCandidate. public DbSet<ImageCandidate>? ImageCandidates { get; set; } Property Value DbSet<ImageCandidate> IndexKeywords The DbSet<TEntity> of IndexKeyword. public DbSet<IndexKeyword>? IndexKeywords { get; set; } Property Value DbSet<IndexKeyword> ResponsiveImages The DbSet<TEntity> of ResponsiveImage. public DbSet<ResponsiveImage>? ResponsiveImages { get; set; } Property Value DbSet<ResponsiveImage> Segments The DbSet<TEntity> of Segment. public DbSet<Segment>? Segments { get; set; } Property Value DbSet<Segment> Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples."
  },
  "latest/Songhay.Publications.DataAccess.html": {
    "href": "latest/Songhay.Publications.DataAccess.html",
    "title": "Namespace Songhay.Publications.DataAccess | Songhay.Publications.DataAccess API",
    "keywords": "Namespace Songhay.Publications.DataAccess Classes PublicationsDbContext The DbContext sub-class for Entity Framework Core."
  },
  "latest/Songhay.Publications.EpubUtility.html": {
    "href": "latest/Songhay.Publications.EpubUtility.html",
    "title": "Class EpubUtility | Songhay.Publications.DataAccess API",
    "keywords": "Class EpubUtility Namespace Songhay.Publications Assembly Songhay.Publications.dll Shared routines for EPUB pipeline automation. public static class EpubUtility Inheritance object EpubUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetUnicodeWithBomEncoding() Gets UTF8Encoding instantiated with encoderShouldEmitUTF8Identifier: true. public static Encoding GetUnicodeWithBomEncoding() Returns Encoding SaveAsUnicodeWithBom(XDocument, string) Saves the specified XDocument with Stream encoding from GetUnicodeWithBomEncoding(). public static void SaveAsUnicodeWithBom(XDocument document, string path) Parameters document XDocument path string"
  },
  "latest/Songhay.Publications.Extensions.DirectoryInfoExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.DirectoryInfoExtensions.html",
    "title": "Class DirectoryInfoExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class DirectoryInfoExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of DirectoryInfo. public static class DirectoryInfoExtensions Inheritance object DirectoryInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HasAllConventionalMarkdownPresentationDirectories(DirectoryInfo?) Returns true when all of the conventional markdown presentation directories are present. public static bool HasAllConventionalMarkdownPresentationDirectories(this DirectoryInfo? directoryInfo) Parameters directoryInfo DirectoryInfo the expected top-level presentation directory Returns bool"
  },
  "latest/Songhay.Publications.Extensions.FileInfoExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.FileInfoExtensions.html",
    "title": "Class FileInfoExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class FileInfoExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of FileInfo public static class FileInfoExtensions Inheritance object FileInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LookLikeJsonFrontMatter(IReadOnlyCollection<string>?, ILogger?) Return true when the specified collection of lines look like JSON public static bool LookLikeJsonFrontMatter(this IReadOnlyCollection<string>? lines, ILogger? logger) Parameters lines IReadOnlyCollection<string> collection of lines logger ILogger the ILogger Returns bool LookLikeMarkdownEntryWithFrontMatter(IReadOnlyCollection<string>?, ILogger?) Return true when the specified collection of lines look like Content public static bool LookLikeMarkdownEntryWithFrontMatter(this IReadOnlyCollection<string>? lines, ILogger? logger) Parameters lines IReadOnlyCollection<string> collection of lines logger ILogger the ILogger Returns bool LookLikeYamlFrontMatter(IReadOnlyCollection<string>?, ILogger?) Return true when the specified collection of lines look like YAML public static bool LookLikeYamlFrontMatter(this IReadOnlyCollection<string>? lines, ILogger? logger) Parameters lines IReadOnlyCollection<string> collection of lines logger ILogger the ILogger Returns bool ToFrontMatterLinesAndContentLines(FileInfo?, ILogger?) Converts the specified FileInfo publications entry into two collections of lines: one for front matter and one for content. public static (IReadOnlyCollection<string> FrontMatterLines, IReadOnlyCollection<string> ContentLines) ToFrontMatterLinesAndContentLines(this FileInfo? entry, ILogger? logger) Parameters entry FileInfo the FileInfo publications entry logger ILogger the ILogger Returns (IReadOnlyCollection<string> FrontMatterLines, IReadOnlyCollection<string> ContentLines) Remarks This member expects the first line of the entry to be a front matter fence (---) or it will return empty collections. ToIDocumentAndAnyContent(FileInfo?, ILogger?) Converts the specified FileInfo into a (IDocument, string) tuple. public static (IDocument? frontMatter, string? content) ToIDocumentAndAnyContent(this FileInfo? entry, ILogger? logger) Parameters entry FileInfo the FileInfo publications entry logger ILogger the ILogger Returns (IDocument frontMatter, string content) ToJsonObjectAndAnyContent(FileInfo?, ILogger?) Converts the specified FileInfo into a (JsonObject, string) tuple. public static (JsonObject? frontMatter, string? content) ToJsonObjectAndAnyContent(this FileInfo? entry, ILogger? logger) Parameters entry FileInfo the FileInfo publications entry logger ILogger the ILogger Returns (JsonObject frontMatter, string content) ToJsonString(IReadOnlyCollection<string>?, ILogger?) Converts the specified collection of lines to a JSON string. public static string? ToJsonString(this IReadOnlyCollection<string>? lines, ILogger? logger) Parameters lines IReadOnlyCollection<string> collection of lines where LookLikeJsonFrontMatter(IReadOnlyCollection<string>?, ILogger?) returns true logger ILogger the ILogger Returns string ToNewIDocument(FileInfo?, string?, string?, ILogger?) Converts the specified FileInfo to a new IDocument. public static IDocument? ToNewIDocument(this FileInfo? entry, string? title, string? documentPath, ILogger? logger) Parameters entry FileInfo the FileInfo publications entry title string the Title documentPath string the Path logger ILogger the ILogger Returns IDocument ToYamlString(IReadOnlyCollection<string>?, ILogger?) Converts the specified collection of lines to a YAML string. public static string? ToYamlString(this IReadOnlyCollection<string>? lines, ILogger? logger) Parameters lines IReadOnlyCollection<string> collection of lines where LookLikeYamlFrontMatter(IReadOnlyCollection<string>?, ILogger?) returns true logger ILogger the ILogger Returns string WriteNewPublicationEntryWithJsonFrontMatter(FileInfo?, string?, string?, string?, ILogger?) Writes a new entry with JSON front matter to FullName public static void WriteNewPublicationEntryWithJsonFrontMatter(this FileInfo? entry, string? title, string? documentPath, string? content, ILogger? logger) Parameters entry FileInfo the FileInfo publications entry title string the Title documentPath string the Path content string the entry content logger ILogger the ILogger WriteNewPublicationEntryWithYamlFrontMatter(FileInfo?, string?, string?, string?, ILogger?) Writes a new entry with YAML front matter to FullName public static void WriteNewPublicationEntryWithYamlFrontMatter(this FileInfo? entry, string? title, string? documentPath, string? content, ILogger? logger) Parameters entry FileInfo the FileInfo publications entry title string the Title documentPath string the Path content string the entry content logger ILogger the ILogger"
  },
  "latest/Songhay.Publications.Extensions.FragmentExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.FragmentExtensions.html",
    "title": "Class FragmentExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class FragmentExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of IFragment public static class FragmentExtensions Inheritance object FragmentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clone(IFragment?) Clones the instance of IFragment. public static Fragment? Clone(this IFragment? data) Parameters data IFragment The document. Returns Fragment GetFragmentByPredicate(IEnumerable<IFragment>?, Func<IFragment, bool>) Returns and traces the first IFragment based on the specified predicate. public static IFragment? GetFragmentByPredicate(this IEnumerable<IFragment>? data, Func<IFragment, bool> predicate) Parameters data IEnumerable<IFragment> The data. predicate Func<IFragment, bool> The predicate. Returns IFragment SetDefaults(IFragment?) Sets the defaults. public static void SetDefaults(this IFragment? data) Parameters data IFragment The fragment. ToDisplayText(IFragment?) Converts the IFragment into human-readable display text. public static string ToDisplayText(this IFragment? data) Parameters data IFragment The data. Returns string ToDisplayText(IFragment?, bool) Converts the IFragment into a display text. public static string ToDisplayText(this IFragment? data, bool showIdOnly) Parameters data IFragment The data. showIdOnly bool when true then display identifiers only Returns string ToMenuDisplayItemModel(IFragment?) Converts the IFragment into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IFragment? data) Parameters data IFragment The fragment. Returns MenuDisplayItemModel ToMenuDisplayItemModel(IFragment?, IGroupable?) Converts the IFragment into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IFragment? data, IGroupable? group) Parameters data IFragment The fragment. group IGroupable The group. Returns MenuDisplayItemModel ToMenuDisplayItemModel(IFragment?, IGroupable?, bool) Converts the IFragment into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IFragment? data, IGroupable? group, bool copyFragmentContent) Parameters data IFragment The document. group IGroupable The group. copyFragmentContent bool if set to true include IFragment content. Returns MenuDisplayItemModel ToMenuDisplayItemModel(IFragment?, bool) Converts the IFragment into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IFragment? data, bool copyFragmentContent) Parameters data IFragment The data. copyFragmentContent bool if set to true include IFragment content. Returns MenuDisplayItemModel ToValidationResult(IFragment?) Converts the IDocument data to FluentValidation.Results.ValidationResult. public static ValidationResult ToValidationResult(this IFragment? data) Parameters data IFragment the IDocument data Returns ValidationResult WithDefaults(IFragment?) Returns IFragment with default values. public static IFragment? WithDefaults(this IFragment? data) Parameters data IFragment The data. Returns IFragment WithEdit(IFragment?, Action<IFragment>?) Returns IFragment after the specified edit Action<T>. public static IFragment WithEdit(this IFragment? data, Action<IFragment>? editAction) Parameters data IFragment The data. editAction Action<IFragment> The edit action. Returns IFragment"
  },
  "latest/Songhay.Publications.Extensions.GroupableExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.GroupableExtensions.html",
    "title": "Class GroupableExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class GroupableExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of Songhay.Abstractions.IGroupable. public static class GroupableExtensions Inheritance object GroupableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsGroup(IGroupable?, string?) Returns true when the group has the specified name. public static bool IsGroup(this IGroupable? group, string? name) Parameters group IGroupable The group. name string The name of the Songhay.Abstractions.IGroupable.GroupId. Returns bool"
  },
  "latest/Songhay.Publications.Extensions.IConfigurationExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.IConfigurationExtensions.html",
    "title": "Class IConfigurationExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class IConfigurationExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of IConfiguration public static class IConfigurationExtensions Inheritance object IConfigurationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToPresentationAndSettingsInfo(IConfiguration?, ILogger?) Converts IConfiguration to Presentation DirectoryInfo. public static (DirectoryInfo presentationInfo, FileInfo settingsInfo) ToPresentationAndSettingsInfo(this IConfiguration? configuration, ILogger? logger) Parameters configuration IConfiguration the IConfiguration logger ILogger the ILogger Returns (DirectoryInfo presentationInfo, FileInfo settingsInfo)"
  },
  "latest/Songhay.Publications.Extensions.IDictionaryExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.IDictionaryExtensions.html",
    "title": "Class IDictionaryExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class IDictionaryExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of IDictionary<TKey, TValue> public static class IDictionaryExtensions Inheritance object IDictionaryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToJsonString(IDictionary<string, object>?) Converts the specified IDictionary<TKey, TValue> to a JSON string. public static string? ToJsonString(this IDictionary<string, object>? data) Parameters data IDictionary<string, object> the IDictionary<TKey, TValue> Returns string ToTaggedDocument(IDictionary<string, object>?, ILogger?, params string[]) Converts the specified IDictionary<TKey, TValue> to IDocument public static IDocument? ToTaggedDocument(this IDictionary<string, object>? data, ILogger? logger, params string[] tagKeys) Parameters data IDictionary<string, object> the IDictionary<TKey, TValue> logger ILogger the ILogger tagKeys string[] the keys to search for tagging the IDocument Returns IDocument Remarks Tagging the IDocument sets Tag with serialized JSON key-value pairs from: the conventional key, extract keys specified in tagKeys"
  },
  "latest/Songhay.Publications.Extensions.IDocumentExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.IDocumentExtensions.html",
    "title": "Class IDocumentExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class IDocumentExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of IDocument public static class IDocumentExtensions Inheritance object IDocumentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clone(IDocument?) Clones the instance of IDocument. public static Document? Clone(this IDocument? data) Parameters data IDocument The document. Returns Document GetDocumentByPredicate(IEnumerable<IDocument>, Func<IDocument, bool>) Returns and traces the first IDocument based on the specified predicate. public static IDocument? GetDocumentByPredicate(this IEnumerable<IDocument> data, Func<IDocument, bool> predicate) Parameters data IEnumerable<IDocument> The data. predicate Func<IDocument, bool> The predicate. Returns IDocument HasFragments(IDocument?) Returns true when the IDocument has any Fragments. public static bool HasFragments(this IDocument? data) Parameters data IDocument The data. Returns bool IsTemplatable(IDocument?) Determines whether the specified document is template-able. public static bool IsTemplatable(this IDocument? data) Parameters data IDocument The document. Returns bool true if the specified document is template-able; otherwise, false. SetDefaults(IDocument?) Sets the defaults. public static void SetDefaults(this IDocument? data) Parameters data IDocument The document. ToConventionalPublicationItem(IDocument?, string?) Converts Document to the conventional publication item. public static XElement? ToConventionalPublicationItem(this IDocument? data, string? templateFileName) Parameters data IDocument The data. templateFileName string Name of the template file. Returns XElement ToDisplayText(IDocument?) Converts the IDocument into human-readable display text. public static string ToDisplayText(this IDocument? data) Parameters data IDocument The data. Returns string ToDisplayText(IDocument?, bool) Converts the IDocument into a display text. public static string ToDisplayText(this IDocument? data, bool showIdOnly) Parameters data IDocument The data. showIdOnly bool when true then display identifiers only Returns string ToMarkdownEntry(IDocument?, string?, string?, ILogger?) Converts the specified IDocument to MarkdownEntry. public static MarkdownEntry? ToMarkdownEntry(this IDocument? document, string? entryPath, string? content, ILogger? logger) Parameters document IDocument the IDocument entryPath string the entry path content string the entry content logger ILogger the ILogger Returns MarkdownEntry ToMenuDisplayItemModel(IDocument?) Converts the IDocument into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IDocument? data) Parameters data IDocument The document. Returns MenuDisplayItemModel ToMenuDisplayItemModel(IDocument?, IGroupable?) Converts the IDocument into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this IDocument? data, IGroupable? group) Parameters data IDocument The document. group IGroupable The group. Returns MenuDisplayItemModel ToValidationResult(IDocument?) Converts the IDocument data to FluentValidation.Results.ValidationResult. public static ValidationResult ToValidationResult(this IDocument? data) Parameters data IDocument the IDocument data Returns ValidationResult ToYaml(IDocument?, ILogger?) Converts the specified IDocument to well-formed YAML. public static string? ToYaml(this IDocument? document, ILogger? logger) Parameters document IDocument the IDocument logger ILogger the ILogger Returns string ToYaml(IDocument?, IReadOnlyCollection<string>?, ILogger?) Converts the specified IDocument to well-formed YAML. public static string? ToYaml(this IDocument? document, IReadOnlyCollection<string>? contentLines, ILogger? logger) Parameters document IDocument the IDocument contentLines IReadOnlyCollection<string> the collection of content lines logger ILogger the ILogger Returns string WithDefaults(IDocument?) Returns IDocument with default values. public static IDocument? WithDefaults(this IDocument? data) Parameters data IDocument The data. Returns IDocument WithEdit(IDocument?, Action<IDocument>?) Returns IDocument after the specified edit Action<T>. public static IDocument WithEdit(this IDocument? data, Action<IDocument>? editAction) Parameters data IDocument The data. editAction Action<IDocument> The edit action. Returns IDocument WritePublicationEntryWithJsonFrontMatter(IDocument?, string?, string?, ILogger?) Writes an entry with JSON front matter to the specified entry path. public static void WritePublicationEntryWithJsonFrontMatter(this IDocument? document, string? entryPath, string? content, ILogger? logger) Parameters document IDocument the IDocument entryPath string the entry path content string the entry content logger ILogger the ILogger WritePublicationEntryWithYamlFrontMatter(IDocument?, string?, string?, ILogger?) Writes an entry with YAML front matter to the specified entry path. public static void WritePublicationEntryWithYamlFrontMatter(this IDocument? document, string? entryPath, string? content, ILogger? logger) Parameters document IDocument the IDocument entryPath string the entry path content string the entry content logger ILogger the ILogger"
  },
  "latest/Songhay.Publications.Extensions.IndexEntryExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.IndexEntryExtensions.html",
    "title": "Class IndexEntryExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class IndexEntryExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of IIndexEntry. public static class IndexEntryExtensions Inheritance object IndexEntryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToJson(IEnumerable<IIndexEntry>) Converts the IEnumerable<T> to a JSON string with conventional JsonSerializerOptions. public static string ToJson(this IEnumerable<IIndexEntry> data) Parameters data IEnumerable<IIndexEntry> The index data. Returns string"
  },
  "latest/Songhay.Publications.Extensions.JsonElementExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.JsonElementExtensions.html",
    "title": "Class JsonElementExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class JsonElementExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of JsonElement. public static class JsonElementExtensions Inheritance object JsonElementExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAddEntryExtractArg(JsonElement, DirectoryInfo?) Gets the arguments for Activity method. public static string GetAddEntryExtractArg(this JsonElement element, DirectoryInfo? presentationInfo) Parameters element JsonElement The JsonElement. presentationInfo DirectoryInfo The presentation information. Returns string GetCompressed11TyIndexArgs(JsonElement, DirectoryInfo?) Gets the arguments for Activity method. public static (DirectoryInfo entryRootInfo, DirectoryInfo indexRootInfo, string indexFileName) GetCompressed11TyIndexArgs(this JsonElement element, DirectoryInfo? presentationInfo) Parameters element JsonElement The JsonElement. presentationInfo DirectoryInfo The presentation information. Returns (DirectoryInfo entryRootInfo, DirectoryInfo indexRootInfo, string indexFileName) GetExpandUrisArgs(JsonElement, DirectoryInfo?) Gets the arguments for Activity method. public static (string entryPath, string collapsedHost) GetExpandUrisArgs(this JsonElement element, DirectoryInfo? presentationInfo) Parameters element JsonElement The JsonElement. presentationInfo DirectoryInfo The presentation information. Returns (string entryPath, string collapsedHost) GetFindChangeArgs(JsonElement, DirectoryInfo?) Gets the arguments for Activity method. public static (string input, string pattern, string replacement, bool useRegex, string outputPath) GetFindChangeArgs(this JsonElement element, DirectoryInfo? presentationInfo) Parameters element JsonElement The JsonElement. presentationInfo DirectoryInfo The presentation information. Returns (string input, string pattern, string replacement, bool useRegex, string outputPath) GetGenerateEntryArgs(JsonElement, DirectoryInfo?) Gets the arguments for Activity method. public static (DirectoryInfo entryDraftsRootInfo, string title) GetGenerateEntryArgs(this JsonElement element, DirectoryInfo? presentationInfo) Parameters element JsonElement The JsonElement. presentationInfo DirectoryInfo The presentation information. Returns (DirectoryInfo entryDraftsRootInfo, string title) GetPublicationCommand(JsonElement) Gets the publication command. public static string? GetPublicationCommand(this JsonElement element) Parameters element JsonElement The JsonElement. Returns string GetPublishEntryArgs(JsonElement, DirectoryInfo?) Gets the arguments for Activity method. public static (DirectoryInfo entryDraftsRootInfo, DirectoryInfo entryRootInfo, string entryFileName) GetPublishEntryArgs(this JsonElement element, DirectoryInfo? presentationInfo) Parameters element JsonElement The JsonElement. presentationInfo DirectoryInfo The presentation information. Returns (DirectoryInfo entryRootInfo, DirectoryInfo indexRootInfo, string indexFileName) ToBoxedValue(JsonElement) Converts the specified JsonElement to a boxed object of boxed objects. public static object? ToBoxedValue(this JsonElement element) Parameters element JsonElement the JsonElement Returns object Remarks This method helps the YamlDotNetYamlDotNet.Serialization.SerializerBuilder serialize JsonElement to YAML without “shadow-converting” all property values to string. See ToYaml(JsonElement). ToObject<TObject>(JsonElement) Converts the specified JsonElement to TObject. public static TObject? ToObject<TObject>(this JsonElement element) Parameters element JsonElement the specified JsonElement Returns TObject Type Parameters TObject the type to convert to ToYaml(JsonElement) Converts the specified JsonElement to a YAML string. public static string ToYaml(this JsonElement element) Parameters element JsonElement the JsonElement Returns string"
  },
  "latest/Songhay.Publications.Extensions.JsonNodeExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.JsonNodeExtensions.html",
    "title": "Class JsonNodeExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class JsonNodeExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of JsonNode public static class JsonNodeExtensions Inheritance object JsonNodeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CopyNode(JsonNode?) Copies the specified JsonNode by calling ToJsonString(JsonSerializerOptions) public static JsonNode? CopyNode(this JsonNode? node) Parameters node JsonNode The node. Returns JsonNode Remarks This method is not efficient. For details, see https://stackoverflow.com/a/71000222/22944. HasProperty(JsonNode?, string?) Returns false when the specified property name does not exist. public static bool HasProperty(this JsonNode? node, string? propertyName) Parameters node JsonNode the JsonNode propertyName string the property name Returns bool ToJsonNode(object?) Converts the specified object to a JsonNode. public static JsonNode? ToJsonNode(this object? data) Parameters data object any object Returns JsonNode"
  },
  "latest/Songhay.Publications.Extensions.JsonObjectExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.JsonObjectExtensions.html",
    "title": "Class JsonObjectExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class JsonObjectExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of JsonObject public static class JsonObjectExtensions Inheritance object JsonObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToYaml(JsonObject?, ILogger?) Converts the specified JsonElement to a YAML string. public static string? ToYaml(this JsonObject? documentData, ILogger? logger) Parameters documentData JsonObject the JsonObject logger ILogger the ILogger Returns string WithExtract(JsonObject?, IReadOnlyCollection<string>?, int, ILogger?) Returns the specified JsonObject with a Publications extract. public static JsonObject? WithExtract(this JsonObject? documentData, IReadOnlyCollection<string>? contentLines, int extractLength, ILogger? logger) Parameters documentData JsonObject the JsonObject contentLines IReadOnlyCollection<string> the collection of content lines extractLength int the length of the extract logger ILogger the ILogger Returns JsonObject WithPropertiesRenamed(JsonObject?, ILogger?, params (string oldName, string newName)[]) Returns the specified JsonObject with its properties renamed. public static JsonObject? WithPropertiesRenamed(this JsonObject? documentData, ILogger? logger, params (string oldName, string newName)[] operations) Parameters documentData JsonObject the JsonObject logger ILogger the ILogger operations (string oldName, string newName)[] specifies which JsonObject properties to rename Returns JsonObject WithoutConventionalDocumentProperties(JsonObject?, ILogger?) Returns the specified JsonObject without the properties that should display in front matter. public static JsonObject? WithoutConventionalDocumentProperties(this JsonObject? documentData, ILogger? logger) Parameters documentData JsonObject the JsonObject logger ILogger the ILogger Returns JsonObject WithoutNonNullableDocumentProperties(JsonObject?, ILogger?) Returns the specified JsonObject without the properties that are null and marked DisallowNull. public static JsonObject? WithoutNonNullableDocumentProperties(this JsonObject? documentData, ILogger? logger) Parameters documentData JsonObject the JsonObject logger ILogger the ILogger Returns JsonObject"
  },
  "latest/Songhay.Publications.Extensions.MarkdownEntryExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.MarkdownEntryExtensions.html",
    "title": "Class MarkdownEntryExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class MarkdownEntryExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of MarkdownEntry. public static class MarkdownEntryExtensions Inheritance object MarkdownEntryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoNullCheck(MarkdownEntry?) Effectively validates MarkdownEntry. public static MarkdownEntry DoNullCheck(this MarkdownEntry? entry) Parameters entry MarkdownEntry The MarkdownEntry entry. Returns MarkdownEntry DoNullCheckForContent(MarkdownEntry?) Effectively validates Content. public static MarkdownEntry DoNullCheckForContent(this MarkdownEntry? entry) Parameters entry MarkdownEntry The MarkdownEntry entry. Returns MarkdownEntry ToExtract(MarkdownEntry?, int) Converts the MarkdownEntry to an extract of the specified length public static string ToExtract(this MarkdownEntry? entry, int length) Parameters entry MarkdownEntry The MarkdownEntry. length int The string-length of the extract. Returns string ToFinalEdit(MarkdownEntry?) Converts the specified MarkdownEntry into the final edit string public static string ToFinalEdit(this MarkdownEntry? entry) Parameters entry MarkdownEntry The MarkdownEntry entry. Returns string ToMarkdownEntry(FileInfo) Converts the specified FileInfo into MarkdownEntry public static MarkdownEntry ToMarkdownEntry(this FileInfo entry) Parameters entry FileInfo The FileInfo entry. Returns MarkdownEntry ToParagraphs(MarkdownEntry?) Converts Content to paragraphs public static string[] ToParagraphs(this MarkdownEntry? entry) Parameters entry MarkdownEntry The MarkdownEntry entry. Returns string[] Touch(MarkdownEntry?, DateTime) Sets the modification date of the MarkdownEntry. public static MarkdownEntry Touch(this MarkdownEntry? entry, DateTime date) Parameters entry MarkdownEntry The MarkdownEntry entry. date DateTime The touch DateTime. Returns MarkdownEntry With11TyExtract(MarkdownEntry?, int) Returns the MarkdownEntry with the conventional eleventy extract of the specified length. public static MarkdownEntry With11TyExtract(this MarkdownEntry? entry, int length) Parameters entry MarkdownEntry The MarkdownEntry. length int The string-length of the extract. Returns MarkdownEntry WithContentHeader(MarkdownEntry?) Returns the MarkdownEntry based on FrontMatter with a title property. public static MarkdownEntry WithContentHeader(this MarkdownEntry? entry) Parameters entry MarkdownEntry The MarkdownEntry entry. Returns MarkdownEntry WithContentHeader(MarkdownEntry?, int) Returns the MarkdownEntry based on FrontMatter with a title property. public static MarkdownEntry WithContentHeader(this MarkdownEntry? entry, int headerLevel) Parameters entry MarkdownEntry The MarkdownEntry entry. headerLevel int The header level. Returns MarkdownEntry WithEdit(MarkdownEntry?, Action<MarkdownEntry>?) Edits the MarkdownEntry with the specified edit action. public static MarkdownEntry WithEdit(this MarkdownEntry? entry, Action<MarkdownEntry>? editAction) Parameters entry MarkdownEntry The MarkdownEntry. editAction Action<MarkdownEntry> the edit Action<T>. Returns MarkdownEntry WithNew11TyFrontMatter(MarkdownEntry?, string?, DateTime, string?, string?) Returns the MarkdownEntry with conventional 11ty frontmatter. public static MarkdownEntry WithNew11TyFrontMatter(this MarkdownEntry? entry, string? title, DateTime inceptDate, string? path, string? tag) Parameters entry MarkdownEntry The MarkdownEntry entry. title string The title of th entry. inceptDate DateTime The incept date of the entry. path string The path to the entry. tag string The tag of the entry. Returns MarkdownEntry WithNewFrontMatter(MarkdownEntry?, string?, DateTime, int, string?, string?, int, string?) Returns the MarkdownEntry with conventional frontmatter. public static MarkdownEntry WithNewFrontMatter(this MarkdownEntry? entry, string? title, DateTime inceptDate, int documentId, string? fileName, string? path, int segmentId, string? tag) Parameters entry MarkdownEntry The MarkdownEntry entry. title string The title of th entry. inceptDate DateTime The incept date of the entry. documentId int the DBMS ID of the entry. fileName string the file name (with extension) of the entry. path string The path to the entry. segmentId int the DBMS ID of the Publications Segment. tag string The tag of the entry. Returns MarkdownEntry"
  },
  "latest/Songhay.Publications.Extensions.PublicationContextExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.PublicationContextExtensions.html",
    "title": "Class PublicationContextExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class PublicationContextExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of PublicationContext. public static class PublicationContextExtensions Inheritance object PublicationContextExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GenerateEpub(PublicationContext) Generates an EPUB publication in the specified PublicationContext. public static void GenerateEpub(this PublicationContext context) Parameters context PublicationContext The PublicationContext."
  },
  "latest/Songhay.Publications.Extensions.ResponsiveImageExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.ResponsiveImageExtensions.html",
    "title": "Class ResponsiveImageExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class ResponsiveImageExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of ResponsiveImage. public static class ResponsiveImageExtensions Inheritance object ResponsiveImageExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToCssMediaAtRules(ResponsiveImage?) Returns CSS @media At-rule blocks. public static string ToCssMediaAtRules(this ResponsiveImage? responsiveImage) Parameters responsiveImage ResponsiveImage The ResponsiveImage. Returns string ToImgMarkup(ResponsiveImage?) Returns img markup with srcset and sizes. public static string ToImgMarkup(this ResponsiveImage? responsiveImage) Parameters responsiveImage ResponsiveImage The ResponsiveImage. Returns string ToSizesSetAttribute(ResponsiveImage?) Reduces Sizes to the sizes attribute. public static string ToSizesSetAttribute(this ResponsiveImage? responsiveImage) Parameters responsiveImage ResponsiveImage The ResponsiveImage. Returns string ToSrcSetAttribute(ResponsiveImage?) Reduces Candidates to the srcset attribute. public static string ToSrcSetAttribute(this ResponsiveImage? responsiveImage) Parameters responsiveImage ResponsiveImage The ResponsiveImage. Returns string"
  },
  "latest/Songhay.Publications.Extensions.SegmentExtensions.html": {
    "href": "latest/Songhay.Publications.Extensions.SegmentExtensions.html",
    "title": "Class SegmentExtensions | Songhay.Publications.DataAccess API",
    "keywords": "Class SegmentExtensions Namespace Songhay.Publications.Extensions Assembly Songhay.Publications.dll Extensions of ISegment public static class SegmentExtensions Inheritance object SegmentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clone(ISegment?) Clones the instance of ISegment. public static Segment? Clone(this ISegment? data) Parameters data ISegment The document. Returns Segment GetSegmentByPredicate(IEnumerable<ISegment>?, Func<ISegment, bool>) Returns and traces the first ISegment based on the specified predicate. public static ISegment? GetSegmentByPredicate(this IEnumerable<ISegment>? data, Func<ISegment, bool> predicate) Parameters data IEnumerable<ISegment> The data. predicate Func<ISegment, bool> The predicate. Returns ISegment HasDocuments(ISegment?) Returns true when the ISegment has any Documents. public static bool HasDocuments(this ISegment? data) Parameters data ISegment Returns bool SetDefaults(ISegment?) Sets the defaults. public static void SetDefaults(this ISegment? data) Parameters data ISegment The data. ToDisplayText(ISegment?) Converts the ISegment into human-readable display text. public static string ToDisplayText(this ISegment? data) Parameters data ISegment The data. Returns string ToDisplayText(ISegment?, bool) Converts the ISegment into human-readable display text. public static string ToDisplayText(this ISegment? data, bool showIdOnly) Parameters data ISegment The data. showIdOnly bool when true then display identifiers only Returns string ToMenuDisplayItemModel(ISegment?) Converts the ISegment into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this ISegment? data) Parameters data ISegment The data. Returns MenuDisplayItemModel ToMenuDisplayItemModel(ISegment?, IGroupable?) Converts the ISegment into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this ISegment? data, IGroupable? group) Parameters data ISegment The data. group IGroupable The group. Returns MenuDisplayItemModel ToPublicationIndexEntries(IEnumerable<ISegment>) Converts the IEnumerable<T> to IEnumerable<T>. public static IEnumerable<IIndexEntry> ToPublicationIndexEntries(this IEnumerable<ISegment> data) Parameters data IEnumerable<ISegment> The data. Returns IEnumerable<IIndexEntry> ToPublicationIndexEntry(ISegment?) Converts the ISegment to IIndexEntry. public static IIndexEntry ToPublicationIndexEntry(this ISegment? data) Parameters data ISegment The data. Returns IIndexEntry ToValidationResult(ISegment?) Converts the IDocument data to FluentValidation.Results.ValidationResult. public static ValidationResult ToValidationResult(this ISegment? data) Parameters data ISegment the IDocument data Returns ValidationResult WithDefaults(ISegment?) Returns ISegment with default values. public static ISegment? WithDefaults(this ISegment? data) Parameters data ISegment The data. Returns ISegment WithEdit(ISegment?, Action<ISegment>?) Returns ISegment after the specified edit Action<T>. public static ISegment WithEdit(this ISegment? data, Action<ISegment>? editAction) Parameters data ISegment The data. editAction Action<ISegment> The edit action. Returns ISegment"
  },
  "latest/Songhay.Publications.Extensions.html": {
    "href": "latest/Songhay.Publications.Extensions.html",
    "title": "Namespace Songhay.Publications.Extensions | Songhay.Publications.DataAccess API",
    "keywords": "Namespace Songhay.Publications.Extensions Classes DirectoryInfoExtensions Extensions of DirectoryInfo. FileInfoExtensions Extensions of FileInfo FragmentExtensions Extensions of IFragment GroupableExtensions Extensions of Songhay.Abstractions.IGroupable. IConfigurationExtensions Extensions of IConfiguration IDictionaryExtensions Extensions of IDictionary<TKey, TValue> IDocumentExtensions Extensions of IDocument IndexEntryExtensions Extensions of IIndexEntry. JsonElementExtensions Extensions of JsonElement. JsonNodeExtensions Extensions of JsonNode JsonObjectExtensions Extensions of JsonObject MarkdownEntryExtensions Extensions of MarkdownEntry. PublicationContextExtensions Extensions of PublicationContext. ResponsiveImageExtensions Extensions of ResponsiveImage. SegmentExtensions Extensions of ISegment"
  },
  "latest/Songhay.Publications.MarkdownEntryUtility.html": {
    "href": "latest/Songhay.Publications.MarkdownEntryUtility.html",
    "title": "Class MarkdownEntryUtility | Songhay.Publications.DataAccess API",
    "keywords": "Class MarkdownEntryUtility Namespace Songhay.Publications Assembly Songhay.Publications.dll Shares routines for MarkdownEntry. public static class MarkdownEntryUtility Inheritance object MarkdownEntryUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GenerateEntryFor11Ty(string, string) Generates or overwrites a MarkdownEntry file at the specified entry root. public static MarkdownEntry GenerateEntryFor11Ty(string entryRoot, string title) Parameters entryRoot string The conventional directory of MarkdownEntry drafts. title string see WithNew11TyFrontMatter(MarkdownEntry?, string?, DateTime, string?, string?). Returns MarkdownEntry GenerateEntryFor11Ty(string?, string?, DateTime, string?, string?) Generates or overwrites a MarkdownEntry file at the specified entry root. public static MarkdownEntry GenerateEntryFor11Ty(string? entryRoot, string? title, DateTime inceptDate, string? path, string? tag) Parameters entryRoot string The conventional directory of MarkdownEntry drafts. title string see WithNew11TyFrontMatter(MarkdownEntry?, string?, DateTime, string?, string?). inceptDate DateTime see WithNew11TyFrontMatter(MarkdownEntry?, string?, DateTime, string?, string?). path string see WithNew11TyFrontMatter(MarkdownEntry?, string?, DateTime, string?, string?). tag string see WithNew11TyFrontMatter(MarkdownEntry?, string?, DateTime, string?, string?). Returns MarkdownEntry PublishEntryFor11Ty(string, string, string) Publishes a MarkdownEntry from the specified entry root to the specified presentation root for the eleventy pipeline. public static string PublishEntryFor11Ty(string entryRoot, string presentationRoot, string fileName) Parameters entryRoot string The conventional directory of MarkdownEntry drafts. presentationRoot string The presentation target directory for publication. fileName string The name of the MarkdownEntry file in the entry directory. Returns string Returns the path of the published file. PublishEntryFor11Ty(string, string, string, DateTime) Publishes a MarkdownEntry from the specified entry root to the specified presentation root for the eleventy pipeline. public static string PublishEntryFor11Ty(string entryRoot, string presentationRoot, string fileName, DateTime publicationDate) Parameters entryRoot string The conventional directory of MarkdownEntry drafts. presentationRoot string The presentation target directory for publication. fileName string The name of the MarkdownEntry file in the entry directory. publicationDate DateTime The DateTime of publication. Returns string Returns the path of the published file. Remarks When the publication date is one day later or more than the entry incept date new eleventy FrontMatter will be generated and the presentation file will be renamed accordingly."
  },
  "latest/Songhay.Publications.MarkdownUtility.html": {
    "href": "latest/Songhay.Publications.MarkdownUtility.html",
    "title": "Class MarkdownUtility | Songhay.Publications.DataAccess API",
    "keywords": "Class MarkdownUtility Namespace Songhay.Publications Assembly Songhay.Publications.dll Shared routines for Markdown public static class MarkdownUtility Inheritance object MarkdownUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertPreBlockToHtml(XElement) Converts a pre element into EPUB-friendly HTML. public static void ConvertPreBlockToHtml(XElement preElement) Parameters preElement XElement The preXElement. GetFourSpaces() Returns a conventional number of space characters. public static string GetFourSpaces() Returns string GetFourSpacesToken() Returns a conventional token representing four space characters. public static string GetFourSpacesToken() Returns string Remarks This is a trick used for automating find-change operations. GetPElementWithNewLine() Returns a p element delimited by NewLine. public static string GetPElementWithNewLine() Returns string GetPreLines(XElement) Decomposes the Value of the specified pre element. public static List<string> GetPreLines(XElement preElement) Parameters preElement XElement The preXElement. Returns List<string> Remarks Note: the first and last elements of preList should be empty(when no leading spaces before ) or should contain pre open and closing, respectively (when there are leading spaces before ). IsMarkdownParagraph(string) Returns true when a block of text starts with a p element. public static bool IsMarkdownParagraph(string input) Parameters input string The string input. Returns bool"
  },
  "latest/Songhay.Publications.Models.CloneInitializers.html": {
    "href": "latest/Songhay.Publications.Models.CloneInitializers.html",
    "title": "Class CloneInitializers | Songhay.Publications.DataAccess API",
    "keywords": "Class CloneInitializers Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Centralizes initializers for CloneExtensions. public static class CloneInitializers Inheritance object CloneInitializers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Publications Gets initializers for Publications. public static Dictionary<Type, Func<object, object>> Publications { get; } Property Value Dictionary<Type, Func<object, object>>"
  },
  "latest/Songhay.Publications.Models.DaisyConsortiumNcx.html": {
    "href": "latest/Songhay.Publications.Models.DaisyConsortiumNcx.html",
    "title": "Class DaisyConsortiumNcx | Songhay.Publications.DataAccess API",
    "keywords": "Class DaisyConsortiumNcx Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines the contents needed to write the DaisyConsortiumNcxToc file. public class DaisyConsortiumNcx Inheritance object DaisyConsortiumNcx Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors DaisyConsortiumNcx(JsonElement, string?, Dictionary<string, string>?, string?, ILogger?) Initializes a new instance of the DaisyConsortiumNcx class. public DaisyConsortiumNcx(JsonElement publicationMeta, string? isbn13, Dictionary<string, string>? chapterSet, string? epubOebpsDirectory, ILogger? logger) Parameters publicationMeta JsonElement The publication meta. isbn13 string The isbn13. chapterSet Dictionary<string, string> The chapter set. epubOebpsDirectory string The epub oebps directory. logger ILogger The ILogger. Methods SetPublicationMeta() Writes the DaisyConsortiumNcxToc file. public void SetPublicationMeta()"
  },
  "latest/Songhay.Publications.Models.Document.html": {
    "href": "latest/Songhay.Publications.Models.Document.html",
    "title": "Class Document | Songhay.Publications.DataAccess API",
    "keywords": "Class Document Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Publications Document. public class Document : IDocument, ITemporal Inheritance object Document Implements IDocument ITemporal Derived SearchIndexEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IDocumentExtensions.Clone(IDocument?) IDocumentExtensions.HasFragments(IDocument?) IDocumentExtensions.IsTemplatable(IDocument?) IDocumentExtensions.SetDefaults(IDocument?) IDocumentExtensions.ToConventionalPublicationItem(IDocument?, string?) IDocumentExtensions.ToDisplayText(IDocument?) IDocumentExtensions.ToDisplayText(IDocument?, bool) IDocumentExtensions.ToMarkdownEntry(IDocument?, string?, string?, ILogger?) IDocumentExtensions.ToMenuDisplayItemModel(IDocument?) IDocumentExtensions.ToMenuDisplayItemModel(IDocument?, IGroupable?) IDocumentExtensions.ToValidationResult(IDocument?) IDocumentExtensions.ToYaml(IDocument?, ILogger?) IDocumentExtensions.ToYaml(IDocument?, IReadOnlyCollection<string>?, ILogger?) IDocumentExtensions.WithDefaults(IDocument?) IDocumentExtensions.WithEdit(IDocument?, Action<IDocument>?) IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(IDocument?, string?, string?, ILogger?) IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(IDocument?, string?, string?, ILogger?) JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Gets or sets the client identifier. [Display(Name = \"Client ID\", Order = 2)] public string? ClientId { get; set; } Property Value string DocumentId Gets or sets the document identifier. [Display(Name = \"Document ID\", Order = 1)] public int? DocumentId { get; set; } Property Value int? DocumentShortName Gets or sets the short name of the document. [Display(Name = \"Short Name\", Order = 4)] public string? DocumentShortName { get; set; } Property Value string EndDate Gets or sets the end date. [Display(Name = \"End Date\", Order = 9)] public DateTime? EndDate { get; set; } Property Value DateTime? FileName Gets or sets the name of the file. [Display(Name = \"File Name\", Order = 6)] public string? FileName { get; set; } Property Value string Fragments Gets or sets the fragments. [Display(AutoGenerateField = false)] public ICollection<Fragment> Fragments { get; init; } Property Value ICollection<Fragment> InceptDate Gets or sets the incept date. [Display(Name = \"Incept Date\", Order = 7)] public DateTime? InceptDate { get; set; } Property Value DateTime? IndexKeywords Gets or sets the collection of IndexKeyword. [Display(AutoGenerateField = false)] public ICollection<IndexKeyword> IndexKeywords { get; init; } Property Value ICollection<IndexKeyword> IsActive Gets or sets the is active. [Display(Name = \"Is Active?\", Order = 10)] public bool? IsActive { get; set; } Property Value bool? IsRoot Gets or sets the is root. [Display(Name = \"Is Root?\", Order = 11)] public bool? IsRoot { get; set; } Property Value bool? ModificationDate Gets or sets the modification date. [Display(Name = \"Modification Date\", Order = 8)] public DateTime? ModificationDate { get; set; } Property Value DateTime? Path Gets or sets the path. [Display(Name = \"Path\", Order = 5)] public string? Path { get; set; } Property Value string ResponsiveImages Gets or sets the collection of ResponsiveImage. [Display(AutoGenerateField = false)] public ICollection<ResponsiveImage> ResponsiveImages { get; init; } Property Value ICollection<ResponsiveImage> Segment Gets or sets the segment. [Display(AutoGenerateField = false)] public Segment? Segment { get; set; } Property Value Segment SegmentId Gets or sets the segment identifier. [Display(Name = \"Segment ID\", Order = 0)] public int? SegmentId { get; set; } Property Value int? SortOrdinal Gets or sets the sort ordinal. [Display(Name = \"Sort Ordinal\", Order = 6)] public byte? SortOrdinal { get; set; } Property Value byte? Tag Gets or sets the tag. [Display(Name = \"Document Tag\", Order = 12)] public string? Tag { get; set; } Property Value string TemplateId Gets or sets the template identifier. [Display(Name = \"XSL Template\", Order = 13)] public int? TemplateId { get; set; } Property Value int? Title Gets or sets the title. [Display(Name = \"Document Title\", Order = 3)] public string? Title { get; set; } Property Value string Methods ToString() Converts the Document into a string. public override string ToString() Returns string"
  },
  "latest/Songhay.Publications.Models.Fragment.html": {
    "href": "latest/Songhay.Publications.Models.Fragment.html",
    "title": "Class Fragment | Songhay.Publications.DataAccess API",
    "keywords": "Class Fragment Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Publications Fragment public class Fragment : IFragment, ITemporal Inheritance object Fragment Implements IFragment ITemporal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods FragmentExtensions.Clone(IFragment?) FragmentExtensions.SetDefaults(IFragment?) FragmentExtensions.ToDisplayText(IFragment?) FragmentExtensions.ToDisplayText(IFragment?, bool) FragmentExtensions.ToMenuDisplayItemModel(IFragment?) FragmentExtensions.ToMenuDisplayItemModel(IFragment?, IGroupable?) FragmentExtensions.ToMenuDisplayItemModel(IFragment?, IGroupable?, bool) FragmentExtensions.ToMenuDisplayItemModel(IFragment?, bool) FragmentExtensions.ToValidationResult(IFragment?) FragmentExtensions.WithDefaults(IFragment?) FragmentExtensions.WithEdit(IFragment?, Action<IFragment>?) JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Gets or sets the client identifier. [Display(Name = \"Client ID\", Order = 2)] public string? ClientId { get; set; } Property Value string Content Gets or sets the content. [Display(AutoGenerateField = false)] public string? Content { get; set; } Property Value string Document Gets or sets the document. [Display(AutoGenerateField = false)] public Document? Document { get; set; } Property Value Document DocumentId Gets or sets the document identifier. [Display(Name = \"Document ID\", Order = 0)] public int? DocumentId { get; set; } Property Value int? EndDate Gets or sets the end date. [Display(Name = \"Expiration Date\", Order = 7)] public DateTime? EndDate { get; set; } Property Value DateTime? FragmentDisplayName Gets or sets the display name of the fragment. [Display(Name = \"Display Name\", Order = 3)] [DisplayFormat(ConvertEmptyStringToNull = true)] public string? FragmentDisplayName { get; set; } Property Value string FragmentId Gets or sets the fragment identifier. [Display(Name = \"Fragment ID\", Order = 1)] public int? FragmentId { get; set; } Property Value int? FragmentName Gets or sets the name of the fragment. [Display(Name = \"Item Name\", Order = 2)] [DisplayFormat(ConvertEmptyStringToNull = true)] public string? FragmentName { get; set; } Property Value string InceptDate Gets or sets the incept date. [Display(Name = \"Incept Date\", Order = 4)] public DateTime? InceptDate { get; set; } Property Value DateTime? IsActive Gets or sets the is active. [Display(Name = \"Is Active?\", Order = 10)] public bool? IsActive { get; set; } Property Value bool? IsNext Gets or sets the is next. [Display(Name = \"Is Next?\", Order = 11)] public bool? IsNext { get; set; } Property Value bool? IsPrevious Gets or sets the is previous. [Display(Name = \"Is Previous?\", Order = 12)] public bool? IsPrevious { get; set; } Property Value bool? IsWrapper Gets or sets the is wrapper. [Display(Name = \"Is Wrapper?\", Order = 13)] public bool? IsWrapper { get; set; } Property Value bool? ItemText Gets or sets the item text. [Display(AutoGenerateField = false)] public string? ItemText { get; set; } Property Value string ModificationDate Gets or sets the modification date. [Display(Name = \"Modification Date\", Order = 5)] public DateTime? ModificationDate { get; set; } Property Value DateTime? NextFragment Gets or sets the next fragment. [Display(AutoGenerateField = false)] public Fragment? NextFragment { get; set; } Property Value Fragment NextFragmentId Gets or sets the next fragment identifier. [Display(Name = \"Next Fragment ID\", Order = 7)] public int? NextFragmentId { get; set; } Property Value int? NextFragments Gets or sets the next fragments. [Display(AutoGenerateField = false)] public ICollection<Fragment> NextFragments { get; init; } Property Value ICollection<Fragment> PrevFragment Gets or sets the previous fragment. [Display(AutoGenerateField = false)] public Fragment? PrevFragment { get; set; } Property Value Fragment PrevFragmentId Gets or sets the previous fragment identifier. [Display(Name = \"Previous Fragment ID\", Order = 8)] public int? PrevFragmentId { get; set; } Property Value int? PrevFragments Gets or sets the previous fragments. [Display(AutoGenerateField = false)] public ICollection<Fragment> PrevFragments { get; init; } Property Value ICollection<Fragment> SortOrdinal Gets or sets the sort ordinal. [Display(Name = \"Sort Ordinal\", Order = 6)] public byte? SortOrdinal { get; set; } Property Value byte? Methods ToString() Converts to string. public override string ToString() Returns string A string that represents this instance."
  },
  "latest/Songhay.Publications.Models.IdpfPackage.html": {
    "href": "latest/Songhay.Publications.Models.IdpfPackage.html",
    "title": "Class IdpfPackage | Songhay.Publications.DataAccess API",
    "keywords": "Class IdpfPackage Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines the content to write the International Digital Publishing Forum IdpfcOpfManifest file. public class IdpfPackage Inheritance object IdpfPackage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors IdpfPackage(JsonElement, string?, Dictionary<string, string>?, string?, ILogger?) Initializes a new instance of the IdpfPackage class. public IdpfPackage(JsonElement publicationMeta, string? isbn13, Dictionary<string, string>? chapterSet, string? epubOebpsDirectory, ILogger? logger) Parameters publicationMeta JsonElement deserialized EpubMetadata isbn13 string International Standard Book Number (ISBN) chapterSet Dictionary<string, string> chapter data epubOebpsDirectory string conventional epub/OEBPS directory logger ILogger The ILogger. Methods SetPublicationMeta() Writes the IdpfcOpfManifest file. public void SetPublicationMeta()"
  },
  "latest/Songhay.Publications.Models.ImageCandidate.html": {
    "href": "latest/Songhay.Publications.Models.ImageCandidate.html",
    "title": "Class ImageCandidate | Songhay.Publications.DataAccess API",
    "keywords": "Class ImageCandidate Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines a responsive-image candidate. public class ImageCandidate Inheritance object ImageCandidate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Remarks “srcset is a string which identifies one or more image candidate strings, separated using commas (,) each specifying image resources to use under given circumstances.” MDN [ \uD83D\uDCD6 https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/srcset ] Properties ImageUri Gets or sets the image URI. public Uri? ImageUri { get; set; } Property Value Uri PixelDensity Gets or sets the pixel density. public string? PixelDensity { get; set; } Property Value string Width Gets or sets the width. public string? Width { get; set; } Property Value string"
  },
  "latest/Songhay.Publications.Models.ImageSize.html": {
    "href": "latest/Songhay.Publications.Models.ImageSize.html",
    "title": "Class ImageSize | Songhay.Publications.DataAccess API",
    "keywords": "Class ImageSize Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines responsive-image sizes. public class ImageSize Inheritance object ImageSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Remarks “sizes allows you to specify the layout width of the image for each of a list of media conditions.” MDN [ \uD83D\uDCD6 https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/sizes ] Properties LayoutWidth Gets or sets the width of the layout. public string? LayoutWidth { get; set; } Property Value string MediaCondition Gets or sets the media condition. public string? MediaCondition { get; set; } Property Value string"
  },
  "latest/Songhay.Publications.Models.IndexCommands.html": {
    "href": "latest/Songhay.Publications.Models.IndexCommands.html",
    "title": "Class IndexCommands | Songhay.Publications.DataAccess API",
    "keywords": "Class IndexCommands Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Conventional command names for markdown indices public static class IndexCommands Inheritance object IndexCommands Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CommandNameGenerateCompressed11TySearchIndex Conventional command name public const string CommandNameGenerateCompressed11TySearchIndex = \"GenerateCompressed11TySearchIndex\" Field Value string"
  },
  "latest/Songhay.Publications.Models.IndexEntry.html": {
    "href": "latest/Songhay.Publications.Models.IndexEntry.html",
    "title": "Class IndexEntry | Songhay.Publications.DataAccess API",
    "keywords": "Class IndexEntry Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Implements IIndexEntry. public class IndexEntry : IIndexEntry, ISegment, ITemporal Inheritance object IndexEntry Implements IIndexEntry ISegment ITemporal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods SegmentExtensions.Clone(ISegment?) SegmentExtensions.HasDocuments(ISegment?) SegmentExtensions.SetDefaults(ISegment?) SegmentExtensions.ToDisplayText(ISegment?) SegmentExtensions.ToDisplayText(ISegment?, bool) SegmentExtensions.ToMenuDisplayItemModel(ISegment?) SegmentExtensions.ToMenuDisplayItemModel(ISegment?, IGroupable?) SegmentExtensions.ToPublicationIndexEntry(ISegment?) SegmentExtensions.ToValidationResult(ISegment?) SegmentExtensions.WithDefaults(ISegment?) SegmentExtensions.WithEdit(ISegment?, Action<ISegment>?) JsonNodeExtensions.ToJsonNode(object?) Remarks The opinion here is that this class demonstrates the advantages of Typescript over a “classic” OOP language. The ability to cast an anonymous object into an interface would eliminate the need for this class. For more detail, see https://github.com/dotnet/roslyn/issues/13#issuecomment-70338359 Constructors IndexEntry() Initializes a new instance of the PublicationContext class. public IndexEntry() IndexEntry(Segment?) Initializes a new instance of the PublicationContext class. public IndexEntry(Segment? data) Parameters data Segment The Segment data. Properties ClientId Gets or sets the client identifier. public string? ClientId { get; set; } Property Value string Documents Gets or sets the documents. public IDocument[] Documents { get; set; } Property Value IDocument[] EndDate End/expiration DateTime of the item. public DateTime? EndDate { get; set; } Property Value DateTime? InceptDate Origin DateTime of the item. public DateTime? InceptDate { get; set; } Property Value DateTime? IsActive Gets or sets the is active. public bool? IsActive { get; set; } Property Value bool? ModificationDate Modification/editorial DateTime of the item. public DateTime? ModificationDate { get; set; } Property Value DateTime? ParentSegmentId Gets or sets the parent segment identifier. public int? ParentSegmentId { get; set; } Property Value int? SegmentId Gets or sets the segment identifier. public int? SegmentId { get; set; } Property Value int? SegmentName Gets or sets the name of the segment. public string? SegmentName { get; set; } Property Value string Segments Gets or sets child segments. public IIndexEntry[] Segments { get; set; } Property Value IIndexEntry[] SortOrdinal Gets or sets the sort ordinal. public byte? SortOrdinal { get; set; } Property Value byte?"
  },
  "latest/Songhay.Publications.Models.IndexKeyword.html": {
    "href": "latest/Songhay.Publications.Models.IndexKeyword.html",
    "title": "Class IndexKeyword | Songhay.Publications.DataAccess API",
    "keywords": "Class IndexKeyword Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Publications keyword. public class IndexKeyword : IIndexKeyword, ITemporal Inheritance object IndexKeyword Implements IIndexKeyword ITemporal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Index Keyword Group Client ID. public string? ClientId { get; set; } Property Value string Documents Collection of Publication Index Keyword Group. public ICollection<Document> Documents { get; init; } Property Value ICollection<Document> EndDate Gets or sets the end date. public DateTime? EndDate { get; set; } Property Value DateTime? The end date. Groups Collection of Publication Index Keyword Group. public ICollection<IndexKeywordGroup> Groups { get; init; } Property Value ICollection<IndexKeywordGroup> Id Index Keyword Group ID. public int? Id { get; set; } Property Value int? InceptDate Gets or sets the incept date. public DateTime? InceptDate { get; set; } Property Value DateTime? The incept date. KeywordValue Gets or sets the keyword value. public string? KeywordValue { get; set; } Property Value string ModificationDate Gets or sets the modification date. public DateTime? ModificationDate { get; set; } Property Value DateTime? The modification date. See Also IIndexKeyword"
  },
  "latest/Songhay.Publications.Models.IndexKeywordGroup.html": {
    "href": "latest/Songhay.Publications.Models.IndexKeywordGroup.html",
    "title": "Class IndexKeywordGroup | Songhay.Publications.DataAccess API",
    "keywords": "Class IndexKeywordGroup Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Publication Index Keyword. public class IndexKeywordGroup : IIndexKeywordGroup, ITemporal Inheritance object IndexKeywordGroup Implements IIndexKeywordGroup ITemporal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Index Keyword Group Client ID. public string? ClientId { get; set; } Property Value string EndDate Gets or sets the end date. public DateTime? EndDate { get; set; } Property Value DateTime? Id Index Keyword Group ID. public int? Id { get; set; } Property Value int? InceptDate Gets or sets the incept date. public DateTime? InceptDate { get; set; } Property Value DateTime? ModificationDate Gets or sets the modification date. public DateTime? ModificationDate { get; set; } Property Value DateTime? Name Index Keyword Group Name. public string? Name { get; set; } Property Value string"
  },
  "latest/Songhay.Publications.Models.MarkdownEntry.html": {
    "href": "latest/Songhay.Publications.Models.MarkdownEntry.html",
    "title": "Class MarkdownEntry | Songhay.Publications.DataAccess API",
    "keywords": "Class MarkdownEntry Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines a conventional, Publication entry. public class MarkdownEntry Inheritance object MarkdownEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods MarkdownEntryExtensions.DoNullCheck(MarkdownEntry?) MarkdownEntryExtensions.DoNullCheckForContent(MarkdownEntry?) MarkdownEntryExtensions.ToExtract(MarkdownEntry?, int) MarkdownEntryExtensions.ToFinalEdit(MarkdownEntry?) MarkdownEntryExtensions.ToParagraphs(MarkdownEntry?) MarkdownEntryExtensions.Touch(MarkdownEntry?, DateTime) MarkdownEntryExtensions.With11TyExtract(MarkdownEntry?, int) MarkdownEntryExtensions.WithContentHeader(MarkdownEntry?) MarkdownEntryExtensions.WithContentHeader(MarkdownEntry?, int) MarkdownEntryExtensions.WithEdit(MarkdownEntry?, Action<MarkdownEntry>?) MarkdownEntryExtensions.WithNew11TyFrontMatter(MarkdownEntry?, string?, DateTime, string?, string?) MarkdownEntryExtensions.WithNewFrontMatter(MarkdownEntry?, string?, DateTime, int, string?, string?, int, string?) JsonNodeExtensions.ToJsonNode(object?) Fields NewLine Defines the new-line convention for entries. public static readonly string NewLine Field Value string Properties Content Text content. public string? Content { get; set; } Property Value string EntryFileInfo Markdown FileInfo. public FileInfo? EntryFileInfo { get; set; } Property Value FileInfo FrontMatter JSON front matter. public JsonObject FrontMatter { get; set; } Property Value JsonObject"
  },
  "latest/Songhay.Publications.Models.MarkdownPresentationCommands.html": {
    "href": "latest/Songhay.Publications.Models.MarkdownPresentationCommands.html",
    "title": "Class MarkdownPresentationCommands | Songhay.Publications.DataAccess API",
    "keywords": "Class MarkdownPresentationCommands Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Conventional command names for markdown presentations public static class MarkdownPresentationCommands Inheritance object MarkdownPresentationCommands Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CommandNameAddEntryExtract Conventional command name public const string CommandNameAddEntryExtract = \"AddEntryExtract\" Field Value string CommandNameExpandUris Conventional command name public const string CommandNameExpandUris = \"ExpandUrisAsync\" Field Value string CommandNameGenerateEntry Conventional command name public const string CommandNameGenerateEntry = \"GenerateEntry\" Field Value string CommandNamePublishEntry Conventional command name public const string CommandNamePublishEntry = \"PublishEntry\" Field Value string"
  },
  "latest/Songhay.Publications.Models.MarkdownPresentationDirectories.html": {
    "href": "latest/Songhay.Publications.Models.MarkdownPresentationDirectories.html",
    "title": "Class MarkdownPresentationDirectories | Songhay.Publications.DataAccess API",
    "keywords": "Class MarkdownPresentationDirectories Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines the conventional directory names of the markdown presentation. public static class MarkdownPresentationDirectories Inheritance object MarkdownPresentationDirectories Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DirectoryNamePresentation Conventional directory name public const string DirectoryNamePresentation = \"presentation\" Field Value string DirectoryNamePresentationDrafts Conventional directory name public const string DirectoryNamePresentationDrafts = \"presentation-drafts\" Field Value string DirectoryNamePresentationShell Conventional directory name public const string DirectoryNamePresentationShell = \"shell\" Field Value string"
  },
  "latest/Songhay.Publications.Models.OebpsTextBiography.html": {
    "href": "latest/Songhay.Publications.Models.OebpsTextBiography.html",
    "title": "Class OebpsTextBiography | Songhay.Publications.DataAccess API",
    "keywords": "Class OebpsTextBiography Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines the content to write the EpubFileBiography file. public class OebpsTextBiography Inheritance object OebpsTextBiography Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Remarks Open eBook Publication Structure (OEBPS), is a legacy e-book format which has been superseded by the EPUB format. https://en.wikipedia.org/wiki/Open_eBook Constructors OebpsTextBiography(string, string, string, ILogger?) Initializes a new instance of the OebpsTextBiography class. public OebpsTextBiography(string templateRoot, string epubTextDirectory, string markdownDirectory, ILogger? logger) Parameters templateRoot string the root directory of the EPUB template files epubTextDirectory string conventional epub/OEBPS/Text directory markdownDirectory string conventional markdown directory logger ILogger The ILogger. Methods Write() Writes the EpubFileBiography file. public void Write()"
  },
  "latest/Songhay.Publications.Models.OebpsTextCopyright.html": {
    "href": "latest/Songhay.Publications.Models.OebpsTextCopyright.html",
    "title": "Class OebpsTextCopyright | Songhay.Publications.DataAccess API",
    "keywords": "Class OebpsTextCopyright Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines the content to write the EpubFileCopyright file. public class OebpsTextCopyright Inheritance object OebpsTextCopyright Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Remarks Open eBook Publication Structure (OEBPS), is a legacy e-book format which has been superseded by the EPUB format. https://en.wikipedia.org/wiki/Open_eBook Constructors OebpsTextCopyright(JsonElement, string) Initializes a new instance of the OebpsTextCopyright class. public OebpsTextCopyright(JsonElement publicationMeta, string epubTextDirectory) Parameters publicationMeta JsonElement The publication meta. epubTextDirectory string Conventional epub/OEBPS/Text directory. Methods Write() Writes the EpubFileCopyright file. public void Write()"
  },
  "latest/Songhay.Publications.Models.OebpsTextDedication.html": {
    "href": "latest/Songhay.Publications.Models.OebpsTextDedication.html",
    "title": "Class OebpsTextDedication | Songhay.Publications.DataAccess API",
    "keywords": "Class OebpsTextDedication Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines the content to write the EpubFileDedication file. public class OebpsTextDedication Inheritance object OebpsTextDedication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Remarks Open eBook Publication Structure (OEBPS), is a legacy e-book format which has been superseded by the EPUB format. https://en.wikipedia.org/wiki/Open_eBook Constructors OebpsTextDedication(string, string, string, ILogger?) Initializes a new instance of the OebpsTextDedication class. public OebpsTextDedication(string templateRoot, string epubTextDirectory, string markdownDirectory, ILogger? logger) Parameters templateRoot string the root directory of the EPUB template files epubTextDirectory string conventional epub/OEBPS/Text directory markdownDirectory string conventional markdown directory logger ILogger The ILogger. Methods Write() Writes the EpubFileDedication file. public void Write()"
  },
  "latest/Songhay.Publications.Models.OebpsTextToc.html": {
    "href": "latest/Songhay.Publications.Models.OebpsTextToc.html",
    "title": "Class OebpsTextToc | Songhay.Publications.DataAccess API",
    "keywords": "Class OebpsTextToc Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines the content to write the EpubFileToc file. public class OebpsTextToc Inheritance object OebpsTextToc Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Remarks Open eBook Publication Structure (OEBPS), is a legacy e-book format which has been superseded by the EPUB format. https://en.wikipedia.org/wiki/Open_eBook Constructors OebpsTextToc(JsonElement, Dictionary<string, string>, string, ILogger?) Initializes a new instance of the OebpsTextToc class. public OebpsTextToc(JsonElement publicationMeta, Dictionary<string, string> chapterSet, string epubTextDirectory, ILogger? logger) Parameters publicationMeta JsonElement deserialized EpubMetadata chapterSet Dictionary<string, string> chapter data epubTextDirectory string conventional epub/OEBPS/Text directory logger ILogger The ILogger. Methods Write() Writes the EpubFileToc file. public void Write()"
  },
  "latest/Songhay.Publications.Models.PublicationAppScalars.html": {
    "href": "latest/Songhay.Publications.Models.PublicationAppScalars.html",
    "title": "Class PublicationAppScalars | Songhay.Publications.DataAccess API",
    "keywords": "Class PublicationAppScalars Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Centralizes magic strings. public static class PublicationAppScalars Inheritance object PublicationAppScalars Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ConventionalSettingsFile The conventional settings file public const string ConventionalSettingsFile = \"app-settings.songhay-system.json\" Field Value string FrontMatterFence The conventional “fence” for front matter public const string FrontMatterFence = \"---\" Field Value string ValidationMessageRequired Validation Message public const string ValidationMessageRequired = \"Value is required.\" Field Value string"
  },
  "latest/Songhay.Publications.Models.PublicationChapter.html": {
    "href": "latest/Songhay.Publications.Models.PublicationChapter.html",
    "title": "Class PublicationChapter | Songhay.Publications.DataAccess API",
    "keywords": "Class PublicationChapter Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines content for the chapter of an EPUB publication. public class PublicationChapter Inheritance object PublicationChapter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors PublicationChapter(KeyValuePair<string, string>, XDocument, string, ILogger?) Initializes a new instance of the PublicationChapter class. public PublicationChapter(KeyValuePair<string, string> chapterPair, XDocument chapterTemplate, string chapterDirectory, ILogger? logger) Parameters chapterPair KeyValuePair<string, string> The chapter pair. chapterTemplate XDocument The chapter template. chapterDirectory string The chapter directory. logger ILogger The ILogger. Methods GenerateXhtml() Generates the XHTML. public string GenerateXhtml() Returns string GetChapterBodyElement() Gets the chapter body element. public XElement? GetChapterBodyElement() Returns XElement GetH1Element() Gets the h1 element. public XElement? GetH1Element() Returns XElement GetTitleElement() Gets the title element. public XElement? GetTitleElement() Returns XElement"
  },
  "latest/Songhay.Publications.Models.PublicationFiles.html": {
    "href": "latest/Songhay.Publications.Models.PublicationFiles.html",
    "title": "Class PublicationFiles | Songhay.Publications.DataAccess API",
    "keywords": "Class PublicationFiles Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Centralizes the EPUB files. public static class PublicationFiles Inheritance object PublicationFiles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DaisyConsortiumNcxToc EPUB DAISY Consortium Navigation Control file. public const string DaisyConsortiumNcxToc = \"toc.ncx\" Field Value string Remarks “The NCX file (Navigation Control file for XML), traditionally named toc.ncx, contains the hierarchical table of contents for the EPUB file.” https://en.wikipedia.org/wiki/EPUB https://web.archive.org/web/20090831133730/http://www.niso.org/workrooms/daisy/Z39-86-2005.html#NCX EpubFileBiography EPUB XHTML template output file. public const string EpubFileBiography = \"biography.xhtml\" Field Value string EpubFileCopyright EPUB XHTML template output file. public const string EpubFileCopyright = \"copyright.xhtml\" Field Value string EpubFileDedication EPUB XHTML template output file. public const string EpubFileDedication = \"dedication.xhtml\" Field Value string EpubFileTitle EPUB XHTML template output file. public const string EpubFileTitle = \"title.xhtml\" Field Value string EpubFileToc EPUB XHTML template output file. public const string EpubFileToc = \"toc.xhtml\" Field Value string EpubMarkdownBiography EPUB XHTML template input file. public const string EpubMarkdownBiography = \"author-biography.md\" Field Value string EpubMarkdownDedication EPUB XHTML template input file. public const string EpubMarkdownDedication = \"author-dedication.md\" Field Value string EpubMetadata Conventional Songhay System metadata for EPUB publications. public const string EpubMetadata = \"publication-meta.json\" Field Value string EpubTemplateBiography EPUB XHTML template file. public const string EpubTemplateBiography = \"biography-template.xhtml\" Field Value string EpubTemplateChapter EPUB XHTML template file. public const string EpubTemplateChapter = \"chapter-template.xhtml\" Field Value string EpubTemplateDedication EPUB XHTML template file. public const string EpubTemplateDedication = \"dedication-template.xhtml\" Field Value string IdpfcOpfManifest International Digital Publishing Forum Open Packaging Format manifest. public const string IdpfcOpfManifest = \"content.opf\" Field Value string Remarks “Open Packaging Format (OPF) 2.0.1, describes the structure of the .epub file in XML… The OPF file, traditionally named content.opf, houses the EPUB book’s metadata, file manifest, and linear reading order.” https://en.wikipedia.org/wiki/EPUB"
  },
  "latest/Songhay.Publications.Models.PublicationNamespaces.html": {
    "href": "latest/Songhay.Publications.Models.PublicationNamespaces.html",
    "title": "Class PublicationNamespaces | Songhay.Publications.DataAccess API",
    "keywords": "Class PublicationNamespaces Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Centralizes XML namespaces primarily for EPUB. pipelines. public static class PublicationNamespaces Inheritance object PublicationNamespaces Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DaisyNcx Conventional namespace for EPUB. public static XNamespace DaisyNcx Field Value XNamespace DublinCore Conventional namespace for EPUB. public static XNamespace DublinCore Field Value XNamespace IdpfOpenPackagingFormat Conventional namespace for EPUB. public static XNamespace IdpfOpenPackagingFormat Field Value XNamespace IdpfOpenPackagingStructure Conventional namespace for EPUB. public static XNamespace IdpfOpenPackagingStructure Field Value XNamespace Xhtml Conventional namespace for EPUB. public static XNamespace Xhtml Field Value XNamespace Xml Conventional namespace for EPUB. public static XNamespace Xml Field Value XNamespace"
  },
  "latest/Songhay.Publications.Models.ResponsiveImage.html": {
    "href": "latest/Songhay.Publications.Models.ResponsiveImage.html",
    "title": "Class ResponsiveImage | Songhay.Publications.DataAccess API",
    "keywords": "Class ResponsiveImage Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines a responsive image. public class ResponsiveImage Inheritance object ResponsiveImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResponsiveImageExtensions.ToCssMediaAtRules(ResponsiveImage?) ResponsiveImageExtensions.ToImgMarkup(ResponsiveImage?) ResponsiveImageExtensions.ToSizesSetAttribute(ResponsiveImage?) ResponsiveImageExtensions.ToSrcSetAttribute(ResponsiveImage?) JsonNodeExtensions.ToJsonNode(object?) Properties Candidates Gets or sets the candidates. public ICollection<ImageCandidate> Candidates { get; init; } Property Value ICollection<ImageCandidate> Description Gets or sets the description. public string? Description { get; set; } Property Value string Key Gets or sets the key. public string? Key { get; set; } Property Value string Sizes Gets or sets the sizes. public ICollection<ImageSize> Sizes { get; init; } Property Value ICollection<ImageSize> Source Gets or sets the source. public Uri? Source { get; set; } Property Value Uri"
  },
  "latest/Songhay.Publications.Models.SearchIndexEntry.html": {
    "href": "latest/Songhay.Publications.Models.SearchIndexEntry.html",
    "title": "Class SearchIndexEntry | Songhay.Publications.DataAccess API",
    "keywords": "Class SearchIndexEntry Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Defines the Search Index Entry. public class SearchIndexEntry : Document, IDocument, ITemporal Inheritance object Document SearchIndexEntry Implements IDocument ITemporal Inherited Members Document.ClientId Document.InceptDate Document.DocumentId Document.DocumentShortName Document.FileName Document.IsActive Document.IsRoot Document.ModificationDate Document.EndDate Document.Path Document.SegmentId Document.SortOrdinal Document.Tag Document.TemplateId Document.Title Document.Segment Document.Fragments Document.IndexKeywords Document.ResponsiveImages Document.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IDocumentExtensions.Clone(IDocument?) IDocumentExtensions.HasFragments(IDocument?) IDocumentExtensions.IsTemplatable(IDocument?) IDocumentExtensions.SetDefaults(IDocument?) IDocumentExtensions.ToConventionalPublicationItem(IDocument?, string?) IDocumentExtensions.ToDisplayText(IDocument?) IDocumentExtensions.ToDisplayText(IDocument?, bool) IDocumentExtensions.ToMarkdownEntry(IDocument?, string?, string?, ILogger?) IDocumentExtensions.ToMenuDisplayItemModel(IDocument?) IDocumentExtensions.ToMenuDisplayItemModel(IDocument?, IGroupable?) IDocumentExtensions.ToValidationResult(IDocument?) IDocumentExtensions.ToYaml(IDocument?, ILogger?) IDocumentExtensions.ToYaml(IDocument?, IReadOnlyCollection<string>?, ILogger?) IDocumentExtensions.WithDefaults(IDocument?) IDocumentExtensions.WithEdit(IDocument?, Action<IDocument>?) IDocumentExtensions.WritePublicationEntryWithJsonFrontMatter(IDocument?, string?, string?, ILogger?) IDocumentExtensions.WritePublicationEntryWithYamlFrontMatter(IDocument?, string?, string?, ILogger?) JsonNodeExtensions.ToJsonNode(object?) Properties Extract The Document Extract. public string? Extract { get; set; } Property Value string"
  },
  "latest/Songhay.Publications.Models.Segment.html": {
    "href": "latest/Songhay.Publications.Models.Segment.html",
    "title": "Class Segment | Songhay.Publications.DataAccess API",
    "keywords": "Class Segment Namespace Songhay.Publications.Models Assembly Songhay.Publications.dll Publications Segment. public class Segment : ISegment, ITemporal Inheritance object Segment Implements ISegment ITemporal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods SegmentExtensions.Clone(ISegment?) SegmentExtensions.HasDocuments(ISegment?) SegmentExtensions.SetDefaults(ISegment?) SegmentExtensions.ToDisplayText(ISegment?) SegmentExtensions.ToDisplayText(ISegment?, bool) SegmentExtensions.ToMenuDisplayItemModel(ISegment?) SegmentExtensions.ToMenuDisplayItemModel(ISegment?, IGroupable?) SegmentExtensions.ToPublicationIndexEntry(ISegment?) SegmentExtensions.ToValidationResult(ISegment?) SegmentExtensions.WithDefaults(ISegment?) SegmentExtensions.WithEdit(ISegment?, Action<ISegment>?) JsonNodeExtensions.ToJsonNode(object?) Properties ClientId Gets or sets the client identifier. [Display(Name = \"Client ID\", Order = 2)] public string? ClientId { get; set; } Property Value string Documents Gets or sets the documents. [Display(AutoGenerateField = false)] public ICollection<Document> Documents { get; init; } Property Value ICollection<Document> EndDate Gets or sets the end date. [Display(Name = \"End Date\", Order = 9)] public DateTime? EndDate { get; set; } Property Value DateTime? InceptDate Gets or sets the incept date. [Display(Name = \"Incept Date\", Order = 5)] public DateTime? InceptDate { get; set; } Property Value DateTime? IsActive Gets or sets the is active. [Display(Name = \"Is Active?\", Order = 4)] public bool? IsActive { get; set; } Property Value bool? ModificationDate Gets or sets the modification date. [Display(Name = \"Modification Date\", Order = 8)] public DateTime? ModificationDate { get; set; } Property Value DateTime? ParentSegment Gets or sets the parent segment. [Display(AutoGenerateField = false)] public Segment? ParentSegment { get; set; } Property Value Segment ParentSegmentId Gets or sets the parent segment identifier. [Display(Name = \"Parent Segment ID\", Order = 0)] public int? ParentSegmentId { get; set; } Property Value int? SegmentId Gets or sets the segment identifier. [Display(Name = \"Segment ID\", Order = 1)] public int? SegmentId { get; set; } Property Value int? SegmentName Gets or sets the name of the segment. [Display(Name = \"Segment Name\", Order = 3)] public string? SegmentName { get; set; } Property Value string Segments Gets or sets child segments. [Display(AutoGenerateField = false)] public ICollection<Segment> Segments { get; init; } Property Value ICollection<Segment> SortOrdinal Gets or sets the sort ordinal. [Display(Name = \"Sort Ordinal\", Order = 6)] public byte? SortOrdinal { get; set; } Property Value byte? Methods ToString() Converts to string. public override string ToString() Returns string A string that represents this instance."
  },
  "latest/Songhay.Publications.Models.html": {
    "href": "latest/Songhay.Publications.Models.html",
    "title": "Namespace Songhay.Publications.Models | Songhay.Publications.DataAccess API",
    "keywords": "Namespace Songhay.Publications.Models Classes CloneInitializers Centralizes initializers for CloneExtensions. DaisyConsortiumNcx Defines the contents needed to write the DaisyConsortiumNcxToc file. Document Publications Document. Fragment Publications Fragment IdpfPackage Defines the content to write the International Digital Publishing Forum IdpfcOpfManifest file. ImageCandidate Defines a responsive-image candidate. ImageSize Defines responsive-image sizes. IndexCommands Conventional command names for markdown indices IndexEntry Implements IIndexEntry. IndexKeyword Publications keyword. IndexKeywordGroup Publication Index Keyword. MarkdownEntry Defines a conventional, Publication entry. MarkdownPresentationCommands Conventional command names for markdown presentations MarkdownPresentationDirectories Defines the conventional directory names of the markdown presentation. OebpsTextBiography Defines the content to write the EpubFileBiography file. OebpsTextCopyright Defines the content to write the EpubFileCopyright file. OebpsTextDedication Defines the content to write the EpubFileDedication file. OebpsTextToc Defines the content to write the EpubFileToc file. PublicationAppScalars Centralizes magic strings. PublicationChapter Defines content for the chapter of an EPUB publication. PublicationFiles Centralizes the EPUB files. PublicationNamespaces Centralizes XML namespaces primarily for EPUB. pipelines. ResponsiveImage Defines a responsive image. SearchIndexEntry Defines the Search Index Entry. Segment Publications Segment."
  },
  "latest/Songhay.Publications.PublicationContext.html": {
    "href": "latest/Songhay.Publications.PublicationContext.html",
    "title": "Class PublicationContext | Songhay.Publications.DataAccess API",
    "keywords": "Class PublicationContext Namespace Songhay.Publications Assembly Songhay.Publications.dll Defines the EPUB Publication Context public class PublicationContext Inheritance object PublicationContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods PublicationContextExtensions.GenerateEpub(PublicationContext) JsonNodeExtensions.ToJsonNode(object?) Remarks EPUB is a technical standard published by the International Digital Publishing Forum (IDPF). Constructors PublicationContext(string, ILogger<PublicationContext>?) Initializes a new instance of the PublicationContext class. public PublicationContext(string templateRoot, ILogger<PublicationContext>? logger) Parameters templateRoot string the root directory of the EPUB template files logger ILogger<PublicationContext> the ILogger<TCategoryName> Methods GenerateChapters() Generates EPUB chapters from EpubMetadata. public void GenerateChapters() GenerateMeta() Calls SetPublicationMeta() and SetPublicationMeta(). public void GenerateMeta() WriteBiography() Calls Write(). public void WriteBiography() WriteCopyright() Calls Write(). public void WriteCopyright() WriteDedication() Calls Write(). public void WriteDedication() WriteTitle() Writes the EpubFileTitle file. public void WriteTitle() WriteToc() Calls Write(). public void WriteToc()"
  },
  "latest/Songhay.Publications.PublicationLinesUtility.html": {
    "href": "latest/Songhay.Publications.PublicationLinesUtility.html",
    "title": "Class PublicationLinesUtility | Songhay.Publications.DataAccess API",
    "keywords": "Class PublicationLinesUtility Namespace Songhay.Publications Assembly Songhay.Publications.dll Shared routines for Publication Lines. public static class PublicationLinesUtility Inheritance object PublicationLinesUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertToExtract(IReadOnlyCollection<string>?, int, ILogger?) Converts the specified content lines to a Publications extract. public static string? ConvertToExtract(IReadOnlyCollection<string>? contentLines, int length, ILogger? logger) Parameters contentLines IReadOnlyCollection<string> the collection of content lines length int The string-length of the extract. logger ILogger the ILogger Returns string ConvertToLines(string?) Converts the specified string into Publication lines. public static IReadOnlyCollection<string> ConvertToLines(string? content) Parameters content string the content string Returns IReadOnlyCollection<string>"
  },
  "latest/Songhay.Publications.Validators.DocumentValidator.html": {
    "href": "latest/Songhay.Publications.Validators.DocumentValidator.html",
    "title": "Class DocumentValidator | Songhay.Publications.DataAccess API",
    "keywords": "Class DocumentValidator Namespace Songhay.Publications.Validators Assembly Songhay.Publications.dll Validator for Document. public class DocumentValidator : AbstractValidator<Document>, IValidator<Document>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Document> DocumentValidator Implements IValidator<Document> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Document>.Validate(Document) AbstractValidator<Document>.ValidateAsync(Document, CancellationToken) AbstractValidator<Document>.Validate(ValidationContext<Document>) AbstractValidator<Document>.ValidateAsync(ValidationContext<Document>, CancellationToken) AbstractValidator<Document>.CreateDescriptor() AbstractValidator<Document>.RuleFor<TProperty>(Expression<Func<Document, TProperty>>) AbstractValidator<Document>.Transform<TProperty, TTransformed>(Expression<Func<Document, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Document>.Transform<TProperty, TTransformed>(Expression<Func<Document, TProperty>>, Func<Document, TProperty, TTransformed>) AbstractValidator<Document>.RuleForEach<TElement>(Expression<Func<Document, IEnumerable<TElement>>>) AbstractValidator<Document>.TransformForEach<TElement, TTransformed>(Expression<Func<Document, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Document>.TransformForEach<TElement, TTransformed>(Expression<Func<Document, IEnumerable<TElement>>>, Func<Document, TElement, TTransformed>) AbstractValidator<Document>.RuleSet(string, Action) AbstractValidator<Document>.When(Func<Document, bool>, Action) AbstractValidator<Document>.When(Func<Document, ValidationContext<Document>, bool>, Action) AbstractValidator<Document>.Unless(Func<Document, bool>, Action) AbstractValidator<Document>.Unless(Func<Document, ValidationContext<Document>, bool>, Action) AbstractValidator<Document>.WhenAsync(Func<Document, CancellationToken, Task<bool>>, Action) AbstractValidator<Document>.WhenAsync(Func<Document, ValidationContext<Document>, CancellationToken, Task<bool>>, Action) AbstractValidator<Document>.UnlessAsync(Func<Document, CancellationToken, Task<bool>>, Action) AbstractValidator<Document>.UnlessAsync(Func<Document, ValidationContext<Document>, CancellationToken, Task<bool>>, Action) AbstractValidator<Document>.Include(IValidator<Document>) AbstractValidator<Document>.Include<TValidator>(Func<Document, TValidator>) AbstractValidator<Document>.GetEnumerator() AbstractValidator<Document>.EnsureInstanceNotNull(object) AbstractValidator<Document>.PreValidate(ValidationContext<Document>, ValidationResult) AbstractValidator<Document>.RaiseValidationException(ValidationContext<Document>, ValidationResult) AbstractValidator<Document>.OnRuleAdded(IValidationRule<Document>) AbstractValidator<Document>.CascadeMode AbstractValidator<Document>.ClassLevelCascadeMode AbstractValidator<Document>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors DocumentValidator() Initializes a new instance of the DocumentValidator class. public DocumentValidator()"
  },
  "latest/Songhay.Publications.Validators.FragmentValidator.html": {
    "href": "latest/Songhay.Publications.Validators.FragmentValidator.html",
    "title": "Class FragmentValidator | Songhay.Publications.DataAccess API",
    "keywords": "Class FragmentValidator Namespace Songhay.Publications.Validators Assembly Songhay.Publications.dll Validator for Fragment. public class FragmentValidator : AbstractValidator<Fragment>, IValidator<Fragment>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Fragment> FragmentValidator Implements IValidator<Fragment> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Fragment>.Validate(Fragment) AbstractValidator<Fragment>.ValidateAsync(Fragment, CancellationToken) AbstractValidator<Fragment>.Validate(ValidationContext<Fragment>) AbstractValidator<Fragment>.ValidateAsync(ValidationContext<Fragment>, CancellationToken) AbstractValidator<Fragment>.CreateDescriptor() AbstractValidator<Fragment>.RuleFor<TProperty>(Expression<Func<Fragment, TProperty>>) AbstractValidator<Fragment>.Transform<TProperty, TTransformed>(Expression<Func<Fragment, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Fragment>.Transform<TProperty, TTransformed>(Expression<Func<Fragment, TProperty>>, Func<Fragment, TProperty, TTransformed>) AbstractValidator<Fragment>.RuleForEach<TElement>(Expression<Func<Fragment, IEnumerable<TElement>>>) AbstractValidator<Fragment>.TransformForEach<TElement, TTransformed>(Expression<Func<Fragment, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Fragment>.TransformForEach<TElement, TTransformed>(Expression<Func<Fragment, IEnumerable<TElement>>>, Func<Fragment, TElement, TTransformed>) AbstractValidator<Fragment>.RuleSet(string, Action) AbstractValidator<Fragment>.When(Func<Fragment, bool>, Action) AbstractValidator<Fragment>.When(Func<Fragment, ValidationContext<Fragment>, bool>, Action) AbstractValidator<Fragment>.Unless(Func<Fragment, bool>, Action) AbstractValidator<Fragment>.Unless(Func<Fragment, ValidationContext<Fragment>, bool>, Action) AbstractValidator<Fragment>.WhenAsync(Func<Fragment, CancellationToken, Task<bool>>, Action) AbstractValidator<Fragment>.WhenAsync(Func<Fragment, ValidationContext<Fragment>, CancellationToken, Task<bool>>, Action) AbstractValidator<Fragment>.UnlessAsync(Func<Fragment, CancellationToken, Task<bool>>, Action) AbstractValidator<Fragment>.UnlessAsync(Func<Fragment, ValidationContext<Fragment>, CancellationToken, Task<bool>>, Action) AbstractValidator<Fragment>.Include(IValidator<Fragment>) AbstractValidator<Fragment>.Include<TValidator>(Func<Fragment, TValidator>) AbstractValidator<Fragment>.GetEnumerator() AbstractValidator<Fragment>.EnsureInstanceNotNull(object) AbstractValidator<Fragment>.PreValidate(ValidationContext<Fragment>, ValidationResult) AbstractValidator<Fragment>.RaiseValidationException(ValidationContext<Fragment>, ValidationResult) AbstractValidator<Fragment>.OnRuleAdded(IValidationRule<Fragment>) AbstractValidator<Fragment>.CascadeMode AbstractValidator<Fragment>.ClassLevelCascadeMode AbstractValidator<Fragment>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors FragmentValidator() Initializes a new instance of the FragmentValidator class. public FragmentValidator()"
  },
  "latest/Songhay.Publications.Validators.ITemporalValidator.html": {
    "href": "latest/Songhay.Publications.Validators.ITemporalValidator.html",
    "title": "Class ITemporalValidator | Songhay.Publications.DataAccess API",
    "keywords": "Class ITemporalValidator Namespace Songhay.Publications.Validators Assembly Songhay.Publications.dll Validator for Songhay.Abstractions.ITemporal implementors. public class ITemporalValidator : AbstractValidator<ITemporal>, IValidator<ITemporal>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ITemporal> ITemporalValidator Implements IValidator<ITemporal> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ITemporal>.Validate(ITemporal) AbstractValidator<ITemporal>.ValidateAsync(ITemporal, CancellationToken) AbstractValidator<ITemporal>.Validate(ValidationContext<ITemporal>) AbstractValidator<ITemporal>.ValidateAsync(ValidationContext<ITemporal>, CancellationToken) AbstractValidator<ITemporal>.CreateDescriptor() AbstractValidator<ITemporal>.RuleFor<TProperty>(Expression<Func<ITemporal, TProperty>>) AbstractValidator<ITemporal>.Transform<TProperty, TTransformed>(Expression<Func<ITemporal, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ITemporal>.Transform<TProperty, TTransformed>(Expression<Func<ITemporal, TProperty>>, Func<ITemporal, TProperty, TTransformed>) AbstractValidator<ITemporal>.RuleForEach<TElement>(Expression<Func<ITemporal, IEnumerable<TElement>>>) AbstractValidator<ITemporal>.TransformForEach<TElement, TTransformed>(Expression<Func<ITemporal, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ITemporal>.TransformForEach<TElement, TTransformed>(Expression<Func<ITemporal, IEnumerable<TElement>>>, Func<ITemporal, TElement, TTransformed>) AbstractValidator<ITemporal>.RuleSet(string, Action) AbstractValidator<ITemporal>.When(Func<ITemporal, bool>, Action) AbstractValidator<ITemporal>.When(Func<ITemporal, ValidationContext<ITemporal>, bool>, Action) AbstractValidator<ITemporal>.Unless(Func<ITemporal, bool>, Action) AbstractValidator<ITemporal>.Unless(Func<ITemporal, ValidationContext<ITemporal>, bool>, Action) AbstractValidator<ITemporal>.WhenAsync(Func<ITemporal, CancellationToken, Task<bool>>, Action) AbstractValidator<ITemporal>.WhenAsync(Func<ITemporal, ValidationContext<ITemporal>, CancellationToken, Task<bool>>, Action) AbstractValidator<ITemporal>.UnlessAsync(Func<ITemporal, CancellationToken, Task<bool>>, Action) AbstractValidator<ITemporal>.UnlessAsync(Func<ITemporal, ValidationContext<ITemporal>, CancellationToken, Task<bool>>, Action) AbstractValidator<ITemporal>.Include(IValidator<ITemporal>) AbstractValidator<ITemporal>.Include<TValidator>(Func<ITemporal, TValidator>) AbstractValidator<ITemporal>.GetEnumerator() AbstractValidator<ITemporal>.EnsureInstanceNotNull(object) AbstractValidator<ITemporal>.PreValidate(ValidationContext<ITemporal>, ValidationResult) AbstractValidator<ITemporal>.RaiseValidationException(ValidationContext<ITemporal>, ValidationResult) AbstractValidator<ITemporal>.OnRuleAdded(IValidationRule<ITemporal>) AbstractValidator<ITemporal>.CascadeMode AbstractValidator<ITemporal>.ClassLevelCascadeMode AbstractValidator<ITemporal>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors ITemporalValidator() Initializes a new instance of the ITemporalValidator class. public ITemporalValidator()"
  },
  "latest/Songhay.Publications.Validators.SegmentValidator.html": {
    "href": "latest/Songhay.Publications.Validators.SegmentValidator.html",
    "title": "Class SegmentValidator | Songhay.Publications.DataAccess API",
    "keywords": "Class SegmentValidator Namespace Songhay.Publications.Validators Assembly Songhay.Publications.dll Validator for Segment. public class SegmentValidator : AbstractValidator<Segment>, IValidator<Segment>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Segment> SegmentValidator Implements IValidator<Segment> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Segment>.Validate(Segment) AbstractValidator<Segment>.ValidateAsync(Segment, CancellationToken) AbstractValidator<Segment>.Validate(ValidationContext<Segment>) AbstractValidator<Segment>.ValidateAsync(ValidationContext<Segment>, CancellationToken) AbstractValidator<Segment>.CreateDescriptor() AbstractValidator<Segment>.RuleFor<TProperty>(Expression<Func<Segment, TProperty>>) AbstractValidator<Segment>.Transform<TProperty, TTransformed>(Expression<Func<Segment, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Segment>.Transform<TProperty, TTransformed>(Expression<Func<Segment, TProperty>>, Func<Segment, TProperty, TTransformed>) AbstractValidator<Segment>.RuleForEach<TElement>(Expression<Func<Segment, IEnumerable<TElement>>>) AbstractValidator<Segment>.TransformForEach<TElement, TTransformed>(Expression<Func<Segment, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Segment>.TransformForEach<TElement, TTransformed>(Expression<Func<Segment, IEnumerable<TElement>>>, Func<Segment, TElement, TTransformed>) AbstractValidator<Segment>.RuleSet(string, Action) AbstractValidator<Segment>.When(Func<Segment, bool>, Action) AbstractValidator<Segment>.When(Func<Segment, ValidationContext<Segment>, bool>, Action) AbstractValidator<Segment>.Unless(Func<Segment, bool>, Action) AbstractValidator<Segment>.Unless(Func<Segment, ValidationContext<Segment>, bool>, Action) AbstractValidator<Segment>.WhenAsync(Func<Segment, CancellationToken, Task<bool>>, Action) AbstractValidator<Segment>.WhenAsync(Func<Segment, ValidationContext<Segment>, CancellationToken, Task<bool>>, Action) AbstractValidator<Segment>.UnlessAsync(Func<Segment, CancellationToken, Task<bool>>, Action) AbstractValidator<Segment>.UnlessAsync(Func<Segment, ValidationContext<Segment>, CancellationToken, Task<bool>>, Action) AbstractValidator<Segment>.Include(IValidator<Segment>) AbstractValidator<Segment>.Include<TValidator>(Func<Segment, TValidator>) AbstractValidator<Segment>.GetEnumerator() AbstractValidator<Segment>.EnsureInstanceNotNull(object) AbstractValidator<Segment>.PreValidate(ValidationContext<Segment>, ValidationResult) AbstractValidator<Segment>.RaiseValidationException(ValidationContext<Segment>, ValidationResult) AbstractValidator<Segment>.OnRuleAdded(IValidationRule<Segment>) AbstractValidator<Segment>.CascadeMode AbstractValidator<Segment>.ClassLevelCascadeMode AbstractValidator<Segment>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods JsonNodeExtensions.ToJsonNode(object?) Constructors SegmentValidator() Initializes a new instance of the SegmentValidator class. public SegmentValidator()"
  },
  "latest/Songhay.Publications.Validators.html": {
    "href": "latest/Songhay.Publications.Validators.html",
    "title": "Namespace Songhay.Publications.Validators | Songhay.Publications.DataAccess API",
    "keywords": "Namespace Songhay.Publications.Validators Classes DocumentValidator Validator for Document. FragmentValidator Validator for Fragment. ITemporalValidator Validator for Songhay.Abstractions.ITemporal implementors. SegmentValidator Validator for Segment."
  },
  "latest/Songhay.Publications.YamlUtility.html": {
    "href": "latest/Songhay.Publications.YamlUtility.html",
    "title": "Class YamlUtility | Songhay.Publications.DataAccess API",
    "keywords": "Class YamlUtility Namespace Songhay.Publications Assembly Songhay.Publications.dll Shared routines for YamlDotNet. public static class YamlUtility Inheritance object YamlUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeserializeYaml(string?) Returns the IDictionary<TKey, TValue> from the specified YAML string. public static IDictionary<string, object>? DeserializeYaml(string? yaml) Parameters yaml string the YAML string Returns IDictionary<string, object> Returns IDictionary<TKey, TValue> where TKey and TValue are converted from object to string"
  },
  "latest/Songhay.Publications.html": {
    "href": "latest/Songhay.Publications.html",
    "title": "Namespace Songhay.Publications | Songhay.Publications.DataAccess API",
    "keywords": "Namespace Songhay.Publications Classes EpubUtility Shared routines for EPUB pipeline automation. MarkdownEntryUtility Shares routines for MarkdownEntry. MarkdownUtility Shared routines for Markdown PublicationContext Defines the EPUB Publication Context PublicationLinesUtility Shared routines for Publication Lines. YamlUtility Shared routines for YamlDotNet."
  }
}